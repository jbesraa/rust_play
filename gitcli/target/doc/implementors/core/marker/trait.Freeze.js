(function() {var implementors = {};
implementors["arc_swap"] = [{"text":"impl&lt;'l, T&gt; Freeze for Guard&lt;'l, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&nbsp;=&nbsp;Global&gt; !Freeze for ArcSwapAny&lt;T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for DirectDeref&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Freeze for DynGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;G, T&gt; Freeze for MapGuard&lt;G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T, F&gt; Freeze for Map&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ConstantDeref&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Constant&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T&gt; Freeze for Cache&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T, F&gt; Freeze for MapCache&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for Shard","synthetic":true,"types":[]},{"text":"impl Freeze for Global","synthetic":true,"types":[]},{"text":"impl !Freeze for PrivateUnsharded","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !Freeze for PrivateSharded&lt;S&gt;","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl&lt;Tz&gt; Freeze for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Freeze for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseMonthError","synthetic":true,"types":[]},{"text":"impl Freeze for SecondsFormat","synthetic":true,"types":[]},{"text":"impl Freeze for RoundingError","synthetic":true,"types":[]},{"text":"impl Freeze for Weekday","synthetic":true,"types":[]},{"text":"impl Freeze for Month","synthetic":true,"types":[]},{"text":"impl Freeze for FixedOffset","synthetic":true,"types":[]},{"text":"impl Freeze for Local","synthetic":true,"types":[]},{"text":"impl Freeze for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for NaiveDate","synthetic":true,"types":[]},{"text":"impl Freeze for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl Freeze for IsoWeek","synthetic":true,"types":[]},{"text":"impl Freeze for NaiveTime","synthetic":true,"types":[]},{"text":"impl Freeze for Parsed","synthetic":true,"types":[]},{"text":"impl Freeze for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Freeze for InternalFixed","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Pad","synthetic":true,"types":[]},{"text":"impl Freeze for Numeric","synthetic":true,"types":[]},{"text":"impl Freeze for Fixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["crossterm"] = [{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for MoveTo","synthetic":true,"types":[]},{"text":"impl Freeze for MoveToNextLine","synthetic":true,"types":[]},{"text":"impl Freeze for MoveToPreviousLine","synthetic":true,"types":[]},{"text":"impl Freeze for MoveToColumn","synthetic":true,"types":[]},{"text":"impl Freeze for MoveUp","synthetic":true,"types":[]},{"text":"impl Freeze for MoveRight","synthetic":true,"types":[]},{"text":"impl Freeze for MoveDown","synthetic":true,"types":[]},{"text":"impl Freeze for MoveLeft","synthetic":true,"types":[]},{"text":"impl Freeze for SavePosition","synthetic":true,"types":[]},{"text":"impl Freeze for RestorePosition","synthetic":true,"types":[]},{"text":"impl Freeze for Hide","synthetic":true,"types":[]},{"text":"impl Freeze for Show","synthetic":true,"types":[]},{"text":"impl Freeze for EnableBlinking","synthetic":true,"types":[]},{"text":"impl Freeze for DisableBlinking","synthetic":true,"types":[]},{"text":"impl Freeze for EnableMouseCapture","synthetic":true,"types":[]},{"text":"impl Freeze for DisableMouseCapture","synthetic":true,"types":[]},{"text":"impl Freeze for KeyModifiers","synthetic":true,"types":[]},{"text":"impl Freeze for KeyEvent","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for MouseEvent","synthetic":true,"types":[]},{"text":"impl Freeze for MouseButton","synthetic":true,"types":[]},{"text":"impl Freeze for KeyCode","synthetic":true,"types":[]},{"text":"impl Freeze for Attributes","synthetic":true,"types":[]},{"text":"impl Freeze for ContentStyle","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Freeze for StyledContent&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Colors","synthetic":true,"types":[]},{"text":"impl Freeze for SetForegroundColor","synthetic":true,"types":[]},{"text":"impl Freeze for SetBackgroundColor","synthetic":true,"types":[]},{"text":"impl Freeze for SetColors","synthetic":true,"types":[]},{"text":"impl Freeze for SetAttribute","synthetic":true,"types":[]},{"text":"impl Freeze for SetAttributes","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Freeze for PrintStyledContent&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ResetColor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Print&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Attribute","synthetic":true,"types":[]},{"text":"impl Freeze for Color","synthetic":true,"types":[]},{"text":"impl Freeze for Colored","synthetic":true,"types":[]},{"text":"impl Freeze for EnterAlternateScreen","synthetic":true,"types":[]},{"text":"impl Freeze for LeaveAlternateScreen","synthetic":true,"types":[]},{"text":"impl Freeze for ScrollUp","synthetic":true,"types":[]},{"text":"impl Freeze for ScrollDown","synthetic":true,"types":[]},{"text":"impl Freeze for Clear","synthetic":true,"types":[]},{"text":"impl Freeze for SetSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SetTitle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ClearType","synthetic":true,"types":[]}];
implementors["git2"] = [{"text":"impl&lt;'cb&gt; Freeze for ApplyOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Blame&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'blame&gt; Freeze for BlameHunk&lt;'blame&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'blame&gt; Freeze for BlameIter&lt;'blame&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BlameOptions","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Blob&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for BlobWriter&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Branch&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Branches&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Buf","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Freeze for CherrypickOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Commit&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'commit, 'repo&gt; Freeze for Parents&lt;'commit, 'repo&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; Freeze for ConfigEntries&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; Freeze for ConfigEntry&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Cred","synthetic":true,"types":[]},{"text":"impl Freeze for CredentialHelper","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Describe&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DescribeFormatOptions","synthetic":true,"types":[]},{"text":"impl Freeze for DescribeOptions","synthetic":true,"types":[]},{"text":"impl&lt;'diff&gt; Freeze for Deltas&lt;'diff&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Diff&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DiffDelta&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DiffFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DiffOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DiffBinary&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DiffBinaryFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DiffFindOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DiffHunk&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for DiffLine&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DiffStats","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Index","synthetic":true,"types":[]},{"text":"impl Freeze for IndexConflict","synthetic":true,"types":[]},{"text":"impl&lt;'index&gt; Freeze for IndexConflicts&lt;'index&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'index&gt; Freeze for IndexEntries&lt;'index&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IndexEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Progress&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'odb&gt; Freeze for Mempack&lt;'odb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for AnnotatedCommit&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for MergeOptions","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Note&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Notes&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Object&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Odb&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for OdbObject&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for OdbPackwriter&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for OdbReader&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for OdbWriter&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Oid","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for PackBuilder&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'buffers&gt; Freeze for Patch&lt;'buffers&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Pathspec","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; Freeze for PathspecFailedEntries&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ps&gt; Freeze for PathspecMatchList&lt;'ps&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; Freeze for PathspecDiffEntries&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; Freeze for PathspecEntries&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ProxyOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Rebase&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'rebase&gt; Freeze for RebaseOperation&lt;'rebase&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Freeze for RebaseOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Reference&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo, 'references&gt; Freeze for ReferenceNames&lt;'repo, 'references&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for References&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Reflog","synthetic":true,"types":[]},{"text":"impl&lt;'reflog&gt; Freeze for ReflogEntry&lt;'reflog&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'reflog&gt; Freeze for ReflogIter&lt;'reflog&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'remote&gt; Freeze for Refspec&lt;'remote&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Freeze for FetchOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Freeze for PushOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'remote&gt; Freeze for Refspecs&lt;'remote&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Remote&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo, 'connection, 'cb&gt; Freeze for RemoteConnection&lt;'repo, 'connection, 'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'remote&gt; Freeze for RemoteHead&lt;'remote&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RemoteCallbacks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Repository","synthetic":true,"types":[]},{"text":"impl Freeze for RepositoryInitOptions","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Freeze for RevertOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Revspec&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Revwalk&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Signature&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Freeze for StashApplyOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'statuses&gt; Freeze for StatusEntry&lt;'statuses&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'statuses&gt; Freeze for StatusIter&lt;'statuses&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for StatusOptions","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Statuses&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Submodule&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Freeze for SubmoduleUpdateOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Tag&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IndexTime","synthetic":true,"types":[]},{"text":"impl Freeze for Time","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for Tree&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'tree&gt; Freeze for TreeEntry&lt;'tree&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'tree&gt; Freeze for TreeIter&lt;'tree&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Freeze for TreeBuilder&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Sort","synthetic":true,"types":[]},{"text":"impl Freeze for CredentialType","synthetic":true,"types":[]},{"text":"impl Freeze for IndexEntryFlag","synthetic":true,"types":[]},{"text":"impl Freeze for IndexEntryExtendedFlag","synthetic":true,"types":[]},{"text":"impl Freeze for IndexAddOption","synthetic":true,"types":[]},{"text":"impl Freeze for RepositoryOpenFlags","synthetic":true,"types":[]},{"text":"impl Freeze for RevparseMode","synthetic":true,"types":[]},{"text":"impl Freeze for MergeAnalysis","synthetic":true,"types":[]},{"text":"impl Freeze for MergePreference","synthetic":true,"types":[]},{"text":"impl Freeze for Status","synthetic":true,"types":[]},{"text":"impl Freeze for RepositoryInitMode","synthetic":true,"types":[]},{"text":"impl Freeze for SubmoduleStatus","synthetic":true,"types":[]},{"text":"impl Freeze for PathspecFlags","synthetic":true,"types":[]},{"text":"impl Freeze for CheckoutNotificationType","synthetic":true,"types":[]},{"text":"impl Freeze for DiffStatsFormat","synthetic":true,"types":[]},{"text":"impl Freeze for StashApplyFlags","synthetic":true,"types":[]},{"text":"impl Freeze for StashFlags","synthetic":true,"types":[]},{"text":"impl Freeze for AttrCheckFlags","synthetic":true,"types":[]},{"text":"impl Freeze for DiffFlags","synthetic":true,"types":[]},{"text":"impl Freeze for ApplyLocation","synthetic":true,"types":[]},{"text":"impl Freeze for DiffBinaryKind","synthetic":true,"types":[]},{"text":"impl Freeze for PackBuilderStage","synthetic":true,"types":[]},{"text":"impl Freeze for RebaseOperationType","synthetic":true,"types":[]},{"text":"impl Freeze for StatusShow","synthetic":true,"types":[]},{"text":"impl Freeze for TreeWalkMode","synthetic":true,"types":[]},{"text":"impl Freeze for TreeWalkResult","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorCode","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorClass","synthetic":true,"types":[]},{"text":"impl Freeze for RepositoryState","synthetic":true,"types":[]},{"text":"impl Freeze for Direction","synthetic":true,"types":[]},{"text":"impl Freeze for ResetType","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectType","synthetic":true,"types":[]},{"text":"impl Freeze for ReferenceType","synthetic":true,"types":[]},{"text":"impl Freeze for BranchType","synthetic":true,"types":[]},{"text":"impl Freeze for ConfigLevel","synthetic":true,"types":[]},{"text":"impl Freeze for FileFavor","synthetic":true,"types":[]},{"text":"impl Freeze for Delta","synthetic":true,"types":[]},{"text":"impl Freeze for FileMode","synthetic":true,"types":[]},{"text":"impl Freeze for SubmoduleIgnore","synthetic":true,"types":[]},{"text":"impl Freeze for DiffFormat","synthetic":true,"types":[]},{"text":"impl Freeze for AutotagOption","synthetic":true,"types":[]},{"text":"impl Freeze for FetchPrune","synthetic":true,"types":[]},{"text":"impl Freeze for StashApplyProgress","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Freeze for RepoBuilder&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Freeze for CheckoutBuilder&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CloneLocal","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Cert&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CertHostkey&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for CertX509&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OidArray","synthetic":true,"types":[]},{"text":"impl Freeze for StringArray","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IterBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Transport","synthetic":true,"types":[]},{"text":"impl Freeze for Service","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Errors","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Freeze for group","synthetic":true,"types":[]},{"text":"impl Freeze for utimbuf","synthetic":true,"types":[]},{"text":"impl Freeze for timeval","synthetic":true,"types":[]},{"text":"impl Freeze for timespec","synthetic":true,"types":[]},{"text":"impl Freeze for rlimit","synthetic":true,"types":[]},{"text":"impl Freeze for rusage","synthetic":true,"types":[]},{"text":"impl Freeze for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for hostent","synthetic":true,"types":[]},{"text":"impl Freeze for iovec","synthetic":true,"types":[]},{"text":"impl Freeze for pollfd","synthetic":true,"types":[]},{"text":"impl Freeze for winsize","synthetic":true,"types":[]},{"text":"impl Freeze for linger","synthetic":true,"types":[]},{"text":"impl Freeze for sigval","synthetic":true,"types":[]},{"text":"impl Freeze for itimerval","synthetic":true,"types":[]},{"text":"impl Freeze for tms","synthetic":true,"types":[]},{"text":"impl Freeze for servent","synthetic":true,"types":[]},{"text":"impl Freeze for protoent","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Freeze for passwd","synthetic":true,"types":[]},{"text":"impl Freeze for ifaddrs","synthetic":true,"types":[]},{"text":"impl Freeze for fd_set","synthetic":true,"types":[]},{"text":"impl Freeze for tm","synthetic":true,"types":[]},{"text":"impl Freeze for msghdr","synthetic":true,"types":[]},{"text":"impl Freeze for cmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for fsid_t","synthetic":true,"types":[]},{"text":"impl Freeze for if_nameindex","synthetic":true,"types":[]},{"text":"impl Freeze for regex_t","synthetic":true,"types":[]},{"text":"impl Freeze for regmatch_t","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Freeze for utsname","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for aiocb","synthetic":true,"types":[]},{"text":"impl Freeze for glob_t","synthetic":true,"types":[]},{"text":"impl Freeze for addrinfo","synthetic":true,"types":[]},{"text":"impl Freeze for mach_timebase_info","synthetic":true,"types":[]},{"text":"impl Freeze for stat","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Freeze for siginfo_t","synthetic":true,"types":[]},{"text":"impl Freeze for sigaction","synthetic":true,"types":[]},{"text":"impl Freeze for stack_t","synthetic":true,"types":[]},{"text":"impl Freeze for fstore_t","synthetic":true,"types":[]},{"text":"impl Freeze for radvisory","synthetic":true,"types":[]},{"text":"impl Freeze for statvfs","synthetic":true,"types":[]},{"text":"impl Freeze for Dl_info","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Freeze for kevent64_s","synthetic":true,"types":[]},{"text":"impl Freeze for dqblk","synthetic":true,"types":[]},{"text":"impl Freeze for if_msghdr","synthetic":true,"types":[]},{"text":"impl Freeze for termios","synthetic":true,"types":[]},{"text":"impl Freeze for flock","synthetic":true,"types":[]},{"text":"impl Freeze for sf_hdtr","synthetic":true,"types":[]},{"text":"impl Freeze for lconv","synthetic":true,"types":[]},{"text":"impl Freeze for proc_taskinfo","synthetic":true,"types":[]},{"text":"impl Freeze for proc_bsdinfo","synthetic":true,"types":[]},{"text":"impl Freeze for proc_taskallinfo","synthetic":true,"types":[]},{"text":"impl Freeze for xsw_usage","synthetic":true,"types":[]},{"text":"impl Freeze for xucred","synthetic":true,"types":[]},{"text":"impl Freeze for mach_header","synthetic":true,"types":[]},{"text":"impl Freeze for mach_header_64","synthetic":true,"types":[]},{"text":"impl Freeze for segment_command","synthetic":true,"types":[]},{"text":"impl Freeze for segment_command_64","synthetic":true,"types":[]},{"text":"impl Freeze for load_command","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_dl","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_inarp","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_ctl","synthetic":true,"types":[]},{"text":"impl Freeze for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Freeze for ipc_perm","synthetic":true,"types":[]},{"text":"impl Freeze for sembuf","synthetic":true,"types":[]},{"text":"impl Freeze for arphdr","synthetic":true,"types":[]},{"text":"impl Freeze for in_addr","synthetic":true,"types":[]},{"text":"impl Freeze for sa_endpoints_t","synthetic":true,"types":[]},{"text":"impl Freeze for timex","synthetic":true,"types":[]},{"text":"impl Freeze for ntptimeval","synthetic":true,"types":[]},{"text":"impl Freeze for kevent","synthetic":true,"types":[]},{"text":"impl Freeze for semid_ds","synthetic":true,"types":[]},{"text":"impl Freeze for shmid_ds","synthetic":true,"types":[]},{"text":"impl Freeze for proc_threadinfo","synthetic":true,"types":[]},{"text":"impl Freeze for statfs","synthetic":true,"types":[]},{"text":"impl Freeze for dirent","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Freeze for utmpx","synthetic":true,"types":[]},{"text":"impl Freeze for sigevent","synthetic":true,"types":[]},{"text":"impl Freeze for timeval32","synthetic":true,"types":[]},{"text":"impl Freeze for if_data","synthetic":true,"types":[]},{"text":"impl Freeze for bpf_hdr","synthetic":true,"types":[]},{"text":"impl Freeze for ucontext_t","synthetic":true,"types":[]},{"text":"impl Freeze for __darwin_mcontext64","synthetic":true,"types":[]},{"text":"impl Freeze for __darwin_x86_exception_state64","synthetic":true,"types":[]},{"text":"impl Freeze for __darwin_x86_thread_state64","synthetic":true,"types":[]},{"text":"impl Freeze for __darwin_x86_float_state64","synthetic":true,"types":[]},{"text":"impl Freeze for __darwin_mmst_reg","synthetic":true,"types":[]},{"text":"impl Freeze for __darwin_xmm_reg","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Freeze for max_align_t","synthetic":true,"types":[]},{"text":"impl Freeze for in6_addr","synthetic":true,"types":[]},{"text":"impl Freeze for semun","synthetic":true,"types":[]},{"text":"impl Freeze for DIR","synthetic":true,"types":[]},{"text":"impl Freeze for FILE","synthetic":true,"types":[]},{"text":"impl Freeze for fpos_t","synthetic":true,"types":[]},{"text":"impl Freeze for timezone","synthetic":true,"types":[]}];
implementors["libgit2_sys"] = [{"text":"impl Freeze for git_revspec","synthetic":true,"types":[]},{"text":"impl Freeze for git_error","synthetic":true,"types":[]},{"text":"impl Freeze for git_oid","synthetic":true,"types":[]},{"text":"impl Freeze for git_strarray","synthetic":true,"types":[]},{"text":"impl Freeze for git_oidarray","synthetic":true,"types":[]},{"text":"impl Freeze for git_signature","synthetic":true,"types":[]},{"text":"impl Freeze for git_time","synthetic":true,"types":[]},{"text":"impl Freeze for git_clone_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_checkout_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_checkout_perfdata","synthetic":true,"types":[]},{"text":"impl Freeze for git_indexer_progress","synthetic":true,"types":[]},{"text":"impl Freeze for git_remote_callbacks","synthetic":true,"types":[]},{"text":"impl Freeze for git_fetch_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_push_update","synthetic":true,"types":[]},{"text":"impl Freeze for git_cert","synthetic":true,"types":[]},{"text":"impl Freeze for git_cert_hostkey","synthetic":true,"types":[]},{"text":"impl Freeze for git_cert_x509","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_file","synthetic":true,"types":[]},{"text":"impl Freeze for git_status_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_delta","synthetic":true,"types":[]},{"text":"impl Freeze for git_status_entry","synthetic":true,"types":[]},{"text":"impl Freeze for git_buf","synthetic":true,"types":[]},{"text":"impl Freeze for git_blame_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_blame_hunk","synthetic":true,"types":[]},{"text":"impl Freeze for git_index_entry","synthetic":true,"types":[]},{"text":"impl Freeze for git_index_time","synthetic":true,"types":[]},{"text":"impl Freeze for git_config_entry","synthetic":true,"types":[]},{"text":"impl Freeze for git_submodule_update_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_writestream","synthetic":true,"types":[]},{"text":"impl Freeze for git_cred","synthetic":true,"types":[]},{"text":"impl Freeze for git_push_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_repository_init_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_remote_head","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_hunk","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_line","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_find_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_similarity_metric","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_format_email_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_binary","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_binary_file","synthetic":true,"types":[]},{"text":"impl Freeze for git_merge_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_transport","synthetic":true,"types":[]},{"text":"impl Freeze for git_odb_backend","synthetic":true,"types":[]},{"text":"impl Freeze for git_odb_writepack","synthetic":true,"types":[]},{"text":"impl Freeze for git_refdb_backend","synthetic":true,"types":[]},{"text":"impl Freeze for git_proxy_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_smart_subtransport_stream","synthetic":true,"types":[]},{"text":"impl Freeze for git_smart_subtransport","synthetic":true,"types":[]},{"text":"impl Freeze for git_smart_subtransport_definition","synthetic":true,"types":[]},{"text":"impl Freeze for git_describe_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_describe_format_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_stash_apply_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_rebase_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_rebase_operation","synthetic":true,"types":[]},{"text":"impl Freeze for git_cherrypick_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_apply_options","synthetic":true,"types":[]},{"text":"impl Freeze for git_blob","synthetic":true,"types":[]},{"text":"impl Freeze for git_branch_iterator","synthetic":true,"types":[]},{"text":"impl Freeze for git_blame","synthetic":true,"types":[]},{"text":"impl Freeze for git_commit","synthetic":true,"types":[]},{"text":"impl Freeze for git_config","synthetic":true,"types":[]},{"text":"impl Freeze for git_config_iterator","synthetic":true,"types":[]},{"text":"impl Freeze for git_index","synthetic":true,"types":[]},{"text":"impl Freeze for git_index_conflict_iterator","synthetic":true,"types":[]},{"text":"impl Freeze for git_object","synthetic":true,"types":[]},{"text":"impl Freeze for git_reference","synthetic":true,"types":[]},{"text":"impl Freeze for git_reference_iterator","synthetic":true,"types":[]},{"text":"impl Freeze for git_annotated_commit","synthetic":true,"types":[]},{"text":"impl Freeze for git_refdb","synthetic":true,"types":[]},{"text":"impl Freeze for git_refspec","synthetic":true,"types":[]},{"text":"impl Freeze for git_remote","synthetic":true,"types":[]},{"text":"impl Freeze for git_repository","synthetic":true,"types":[]},{"text":"impl Freeze for git_revwalk","synthetic":true,"types":[]},{"text":"impl Freeze for git_submodule","synthetic":true,"types":[]},{"text":"impl Freeze for git_tag","synthetic":true,"types":[]},{"text":"impl Freeze for git_tree","synthetic":true,"types":[]},{"text":"impl Freeze for git_tree_entry","synthetic":true,"types":[]},{"text":"impl Freeze for git_treebuilder","synthetic":true,"types":[]},{"text":"impl Freeze for git_push","synthetic":true,"types":[]},{"text":"impl Freeze for git_note","synthetic":true,"types":[]},{"text":"impl Freeze for git_note_iterator","synthetic":true,"types":[]},{"text":"impl Freeze for git_status_list","synthetic":true,"types":[]},{"text":"impl Freeze for git_pathspec","synthetic":true,"types":[]},{"text":"impl Freeze for git_pathspec_match_list","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff","synthetic":true,"types":[]},{"text":"impl Freeze for git_diff_stats","synthetic":true,"types":[]},{"text":"impl Freeze for git_patch","synthetic":true,"types":[]},{"text":"impl Freeze for git_rebase","synthetic":true,"types":[]},{"text":"impl Freeze for git_reflog","synthetic":true,"types":[]},{"text":"impl Freeze for git_reflog_entry","synthetic":true,"types":[]},{"text":"impl Freeze for git_describe_result","synthetic":true,"types":[]},{"text":"impl Freeze for git_packbuilder","synthetic":true,"types":[]},{"text":"impl Freeze for git_odb","synthetic":true,"types":[]},{"text":"impl Freeze for git_odb_stream","synthetic":true,"types":[]},{"text":"impl Freeze for git_odb_object","synthetic":true,"types":[]},{"text":"impl Freeze for git_worktree","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_SESSION","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_USERAUTH_KBDINT_PROMPT","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_USERAUTH_KBDINT_RESPONSE","synthetic":true,"types":[]}];
implementors["libssh2_sys"] = [{"text":"impl Freeze for libssh2_struct_stat","synthetic":true,"types":[]},{"text":"impl Freeze for libssh2_agent_publickey","synthetic":true,"types":[]},{"text":"impl Freeze for libssh2_knownhost","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_SFTP_ATTRIBUTES","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_SFTP_STATVFS","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_USERAUTH_KBDINT_PROMPT","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_USERAUTH_KBDINT_RESPONSE","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_SESSION","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_AGENT","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_CHANNEL","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_LISTENER","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_KNOWNHOSTS","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_SFTP","synthetic":true,"types":[]},{"text":"impl Freeze for LIBSSH2_SFTP_HANDLE","synthetic":true,"types":[]}];
implementors["libz_sys"] = [{"text":"impl Freeze for gz_header","synthetic":true,"types":[]},{"text":"impl Freeze for z_stream","synthetic":true,"types":[]},{"text":"impl Freeze for gzFile_s","synthetic":true,"types":[]},{"text":"impl Freeze for internal_state","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl Freeze for GuardSend","synthetic":true,"types":[]},{"text":"impl Freeze for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !Freeze for Mutex&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, G, T&gt; !Freeze for ReentrantMutex&lt;R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Freeze for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Freeze for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T&gt; !Freeze for RwLock&lt;R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for RwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for RwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for RwLockUpgradableReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Freeze for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Freeze for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for LevelFilter","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Freeze for Interest","synthetic":true,"types":[]},{"text":"impl Freeze for Poll","synthetic":true,"types":[]},{"text":"impl Freeze for Registry","synthetic":true,"types":[]},{"text":"impl Freeze for Token","synthetic":true,"types":[]},{"text":"impl Freeze for Waker","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SourceFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Events","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Freeze for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Freeze for FloatErrorKind","synthetic":true,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Freeze for AES_KEY","synthetic":true,"types":[]},{"text":"impl Freeze for ASN1_ENCODING","synthetic":true,"types":[]},{"text":"impl Freeze for ERR_STRING_DATA","synthetic":true,"types":[]},{"text":"impl Freeze for X509V3_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for SHA_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for SHA256_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for SHA512_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Freeze for X509_VAL","synthetic":true,"types":[]},{"text":"impl Freeze for GENERAL_NAME","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Freeze for BIO_METHOD","synthetic":true,"types":[]},{"text":"impl Freeze for CMS_ContentInfo","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_void","synthetic":true,"types":[]},{"text":"impl Freeze for point_conversion_form_t","synthetic":true,"types":[]},{"text":"impl Freeze for EC_METHOD","synthetic":true,"types":[]},{"text":"impl Freeze for EC_GROUP","synthetic":true,"types":[]},{"text":"impl Freeze for EC_POINT","synthetic":true,"types":[]},{"text":"impl Freeze for ECDSA_SIG","synthetic":true,"types":[]},{"text":"impl Freeze for OCSP_CERTID","synthetic":true,"types":[]},{"text":"impl Freeze for OCSP_ONEREQ","synthetic":true,"types":[]},{"text":"impl Freeze for OCSP_REQUEST","synthetic":true,"types":[]},{"text":"impl Freeze for OCSP_BASICRESP","synthetic":true,"types":[]},{"text":"impl Freeze for ASN1_INTEGER","synthetic":true,"types":[]},{"text":"impl Freeze for ASN1_GENERALIZEDTIME","synthetic":true,"types":[]},{"text":"impl Freeze for ASN1_STRING","synthetic":true,"types":[]},{"text":"impl Freeze for ASN1_BIT_STRING","synthetic":true,"types":[]},{"text":"impl Freeze for ASN1_TIME","synthetic":true,"types":[]},{"text":"impl Freeze for ASN1_TYPE","synthetic":true,"types":[]},{"text":"impl Freeze for ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Freeze for ASN1_OCTET_STRING","synthetic":true,"types":[]},{"text":"impl Freeze for bio_st","synthetic":true,"types":[]},{"text":"impl Freeze for BIO","synthetic":true,"types":[]},{"text":"impl Freeze for BIGNUM","synthetic":true,"types":[]},{"text":"impl Freeze for BN_BLINDING","synthetic":true,"types":[]},{"text":"impl Freeze for BN_MONT_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for BN_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for BN_GENCB","synthetic":true,"types":[]},{"text":"impl Freeze for EVP_CIPHER","synthetic":true,"types":[]},{"text":"impl Freeze for EVP_CIPHER_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for EVP_MD","synthetic":true,"types":[]},{"text":"impl Freeze for EVP_MD_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for EVP_PKEY","synthetic":true,"types":[]},{"text":"impl Freeze for PKCS8_PRIV_KEY_INFO","synthetic":true,"types":[]},{"text":"impl Freeze for EVP_PKEY_ASN1_METHOD","synthetic":true,"types":[]},{"text":"impl Freeze for EVP_PKEY_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for HMAC_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for DH","synthetic":true,"types":[]},{"text":"impl Freeze for DH_METHOD","synthetic":true,"types":[]},{"text":"impl Freeze for DSA","synthetic":true,"types":[]},{"text":"impl Freeze for DSA_METHOD","synthetic":true,"types":[]},{"text":"impl Freeze for RSA","synthetic":true,"types":[]},{"text":"impl Freeze for RSA_METHOD","synthetic":true,"types":[]},{"text":"impl Freeze for EC_KEY","synthetic":true,"types":[]},{"text":"impl Freeze for X509","synthetic":true,"types":[]},{"text":"impl Freeze for X509_ALGOR","synthetic":true,"types":[]},{"text":"impl Freeze for X509_CRL","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_X509_CRL","synthetic":true,"types":[]},{"text":"impl Freeze for X509_NAME","synthetic":true,"types":[]},{"text":"impl Freeze for X509_STORE","synthetic":true,"types":[]},{"text":"impl Freeze for X509_STORE_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for X509_VERIFY_PARAM","synthetic":true,"types":[]},{"text":"impl Freeze for CONF","synthetic":true,"types":[]},{"text":"impl Freeze for OPENSSL_INIT_SETTINGS","synthetic":true,"types":[]},{"text":"impl Freeze for ENGINE","synthetic":true,"types":[]},{"text":"impl Freeze for SSL","synthetic":true,"types":[]},{"text":"impl Freeze for SSL_CTX","synthetic":true,"types":[]},{"text":"impl Freeze for COMP_METHOD","synthetic":true,"types":[]},{"text":"impl Freeze for CRYPTO_EX_DATA","synthetic":true,"types":[]},{"text":"impl Freeze for OCSP_RESPONSE","synthetic":true,"types":[]},{"text":"impl Freeze for PKCS12","synthetic":true,"types":[]},{"text":"impl Freeze for PKCS7_SIGNED","synthetic":true,"types":[]},{"text":"impl Freeze for PKCS7_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Freeze for PKCS7_SIGN_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Freeze for PKCS7_DIGEST","synthetic":true,"types":[]},{"text":"impl Freeze for PKCS7_ENCRYPT","synthetic":true,"types":[]},{"text":"impl Freeze for PKCS7","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_OPENSSL_STRING","synthetic":true,"types":[]},{"text":"impl Freeze for SSL_METHOD","synthetic":true,"types":[]},{"text":"impl Freeze for SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Freeze for SSL_SESSION","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Freeze for OPENSSL_STACK","synthetic":true,"types":[]},{"text":"impl Freeze for X509_NAME_ENTRY","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_X509_NAME","synthetic":true,"types":[]},{"text":"impl Freeze for X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_X509_ATTRIBUTE","synthetic":true,"types":[]},{"text":"impl Freeze for X509_REQ_INFO","synthetic":true,"types":[]},{"text":"impl Freeze for X509_REQ","synthetic":true,"types":[]},{"text":"impl Freeze for X509_CINF","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_X509","synthetic":true,"types":[]},{"text":"impl Freeze for X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Freeze for X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Freeze for CONF_METHOD","synthetic":true,"types":[]},{"text":"impl Freeze for stack_st_GENERAL_NAME","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl !Freeze for Condvar","synthetic":true,"types":[]},{"text":"impl Freeze for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl !Freeze for Once","synthetic":true,"types":[]},{"text":"impl !Freeze for RawFairMutex","synthetic":true,"types":[]},{"text":"impl !Freeze for RawMutex","synthetic":true,"types":[]},{"text":"impl !Freeze for RawRwLock","synthetic":true,"types":[]},{"text":"impl Freeze for RawThreadId","synthetic":true,"types":[]},{"text":"impl Freeze for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Freeze for ParkToken","synthetic":true,"types":[]},{"text":"impl Freeze for UnparkResult","synthetic":true,"types":[]},{"text":"impl Freeze for UnparkToken","synthetic":true,"types":[]},{"text":"impl Freeze for SpinWait","synthetic":true,"types":[]},{"text":"impl Freeze for FilterOp","synthetic":true,"types":[]},{"text":"impl Freeze for ParkResult","synthetic":true,"types":[]},{"text":"impl Freeze for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Freeze for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Freeze for TokenStream","synthetic":true,"types":[]},{"text":"impl Freeze for LexError","synthetic":true,"types":[]},{"text":"impl Freeze for Span","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for Punct","synthetic":true,"types":[]},{"text":"impl Freeze for Ident","synthetic":true,"types":[]},{"text":"impl Freeze for Literal","synthetic":true,"types":[]},{"text":"impl Freeze for TokenTree","synthetic":true,"types":[]},{"text":"impl Freeze for Delimiter","synthetic":true,"types":[]},{"text":"impl Freeze for Spacing","synthetic":true,"types":[]},{"text":"impl Freeze for IntoIter","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Freeze for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Always","synthetic":true,"types":[]}];
implementors["signal_hook"] = [{"text":"impl Freeze for Signals","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Pending&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Forever&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Freeze for SigId","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Freeze for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for CollectionAllocErr","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Freeze for Attribute","synthetic":true,"types":[]},{"text":"impl Freeze for MetaList","synthetic":true,"types":[]},{"text":"impl Freeze for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Freeze for Field","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Freeze for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Freeze for Variant","synthetic":true,"types":[]},{"text":"impl Freeze for VisCrate","synthetic":true,"types":[]},{"text":"impl Freeze for VisPublic","synthetic":true,"types":[]},{"text":"impl Freeze for VisRestricted","synthetic":true,"types":[]},{"text":"impl Freeze for ExprArray","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssign","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAsync","synthetic":true,"types":[]},{"text":"impl Freeze for ExprAwait","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBinary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBox","synthetic":true,"types":[]},{"text":"impl Freeze for ExprBreak","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprCast","synthetic":true,"types":[]},{"text":"impl Freeze for ExprClosure","synthetic":true,"types":[]},{"text":"impl Freeze for ExprContinue","synthetic":true,"types":[]},{"text":"impl Freeze for ExprField","synthetic":true,"types":[]},{"text":"impl Freeze for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprGroup","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIf","synthetic":true,"types":[]},{"text":"impl Freeze for ExprIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLet","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLit","synthetic":true,"types":[]},{"text":"impl Freeze for ExprLoop","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMacro","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMatch","synthetic":true,"types":[]},{"text":"impl Freeze for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Freeze for ExprParen","synthetic":true,"types":[]},{"text":"impl Freeze for ExprPath","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRange","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReference","synthetic":true,"types":[]},{"text":"impl Freeze for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Freeze for ExprReturn","synthetic":true,"types":[]},{"text":"impl Freeze for ExprStruct","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTry","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Freeze for ExprTuple","synthetic":true,"types":[]},{"text":"impl Freeze for ExprType","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnary","synthetic":true,"types":[]},{"text":"impl Freeze for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Freeze for ExprWhile","synthetic":true,"types":[]},{"text":"impl Freeze for ExprYield","synthetic":true,"types":[]},{"text":"impl Freeze for Index","synthetic":true,"types":[]},{"text":"impl Freeze for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Freeze for ConstParam","synthetic":true,"types":[]},{"text":"impl Freeze for Generics","synthetic":true,"types":[]},{"text":"impl Freeze for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateEq","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Freeze for PredicateType","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBound","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParam","synthetic":true,"types":[]},{"text":"impl Freeze for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Lifetime","synthetic":true,"types":[]},{"text":"impl Freeze for LitBool","synthetic":true,"types":[]},{"text":"impl Freeze for LitByte","synthetic":true,"types":[]},{"text":"impl Freeze for LitByteStr","synthetic":true,"types":[]},{"text":"impl Freeze for LitChar","synthetic":true,"types":[]},{"text":"impl Freeze for LitFloat","synthetic":true,"types":[]},{"text":"impl Freeze for LitInt","synthetic":true,"types":[]},{"text":"impl Freeze for LitStr","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for DataEnum","synthetic":true,"types":[]},{"text":"impl Freeze for DataStruct","synthetic":true,"types":[]},{"text":"impl Freeze for DataUnion","synthetic":true,"types":[]},{"text":"impl Freeze for DeriveInput","synthetic":true,"types":[]},{"text":"impl Freeze for Abi","synthetic":true,"types":[]},{"text":"impl Freeze for BareFnArg","synthetic":true,"types":[]},{"text":"impl Freeze for TypeArray","synthetic":true,"types":[]},{"text":"impl Freeze for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Freeze for TypeGroup","synthetic":true,"types":[]},{"text":"impl Freeze for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Freeze for TypeInfer","synthetic":true,"types":[]},{"text":"impl Freeze for TypeMacro","synthetic":true,"types":[]},{"text":"impl Freeze for TypeNever","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParen","synthetic":true,"types":[]},{"text":"impl Freeze for TypePath","synthetic":true,"types":[]},{"text":"impl Freeze for TypePtr","synthetic":true,"types":[]},{"text":"impl Freeze for TypeReference","synthetic":true,"types":[]},{"text":"impl Freeze for TypeSlice","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Freeze for TypeTuple","synthetic":true,"types":[]},{"text":"impl Freeze for Variadic","synthetic":true,"types":[]},{"text":"impl Freeze for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Binding","synthetic":true,"types":[]},{"text":"impl Freeze for Constraint","synthetic":true,"types":[]},{"text":"impl Freeze for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Path","synthetic":true,"types":[]},{"text":"impl Freeze for PathSegment","synthetic":true,"types":[]},{"text":"impl Freeze for QSelf","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for AttrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for Meta","synthetic":true,"types":[]},{"text":"impl Freeze for NestedMeta","synthetic":true,"types":[]},{"text":"impl Freeze for Fields","synthetic":true,"types":[]},{"text":"impl Freeze for Visibility","synthetic":true,"types":[]},{"text":"impl Freeze for Expr","synthetic":true,"types":[]},{"text":"impl Freeze for Member","synthetic":true,"types":[]},{"text":"impl Freeze for GenericParam","synthetic":true,"types":[]},{"text":"impl Freeze for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Freeze for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Freeze for WherePredicate","synthetic":true,"types":[]},{"text":"impl Freeze for Lit","synthetic":true,"types":[]},{"text":"impl Freeze for StrStyle","synthetic":true,"types":[]},{"text":"impl Freeze for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Freeze for Data","synthetic":true,"types":[]},{"text":"impl Freeze for BinOp","synthetic":true,"types":[]},{"text":"impl Freeze for UnOp","synthetic":true,"types":[]},{"text":"impl Freeze for ReturnType","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for GenericArgument","synthetic":true,"types":[]},{"text":"impl Freeze for PathArguments","synthetic":true,"types":[]},{"text":"impl Freeze for Underscore","synthetic":true,"types":[]},{"text":"impl Freeze for Abstract","synthetic":true,"types":[]},{"text":"impl Freeze for As","synthetic":true,"types":[]},{"text":"impl Freeze for Async","synthetic":true,"types":[]},{"text":"impl Freeze for Auto","synthetic":true,"types":[]},{"text":"impl Freeze for Await","synthetic":true,"types":[]},{"text":"impl Freeze for Become","synthetic":true,"types":[]},{"text":"impl Freeze for Box","synthetic":true,"types":[]},{"text":"impl Freeze for Break","synthetic":true,"types":[]},{"text":"impl Freeze for Const","synthetic":true,"types":[]},{"text":"impl Freeze for Continue","synthetic":true,"types":[]},{"text":"impl Freeze for Crate","synthetic":true,"types":[]},{"text":"impl Freeze for Default","synthetic":true,"types":[]},{"text":"impl Freeze for Do","synthetic":true,"types":[]},{"text":"impl Freeze for Dyn","synthetic":true,"types":[]},{"text":"impl Freeze for Else","synthetic":true,"types":[]},{"text":"impl Freeze for Enum","synthetic":true,"types":[]},{"text":"impl Freeze for Extern","synthetic":true,"types":[]},{"text":"impl Freeze for Final","synthetic":true,"types":[]},{"text":"impl Freeze for Fn","synthetic":true,"types":[]},{"text":"impl Freeze for For","synthetic":true,"types":[]},{"text":"impl Freeze for If","synthetic":true,"types":[]},{"text":"impl Freeze for Impl","synthetic":true,"types":[]},{"text":"impl Freeze for In","synthetic":true,"types":[]},{"text":"impl Freeze for Let","synthetic":true,"types":[]},{"text":"impl Freeze for Loop","synthetic":true,"types":[]},{"text":"impl Freeze for Macro","synthetic":true,"types":[]},{"text":"impl Freeze for Match","synthetic":true,"types":[]},{"text":"impl Freeze for Mod","synthetic":true,"types":[]},{"text":"impl Freeze for Move","synthetic":true,"types":[]},{"text":"impl Freeze for Mut","synthetic":true,"types":[]},{"text":"impl Freeze for Override","synthetic":true,"types":[]},{"text":"impl Freeze for Priv","synthetic":true,"types":[]},{"text":"impl Freeze for Pub","synthetic":true,"types":[]},{"text":"impl Freeze for Ref","synthetic":true,"types":[]},{"text":"impl Freeze for Return","synthetic":true,"types":[]},{"text":"impl Freeze for SelfType","synthetic":true,"types":[]},{"text":"impl Freeze for SelfValue","synthetic":true,"types":[]},{"text":"impl Freeze for Static","synthetic":true,"types":[]},{"text":"impl Freeze for Struct","synthetic":true,"types":[]},{"text":"impl Freeze for Super","synthetic":true,"types":[]},{"text":"impl Freeze for Trait","synthetic":true,"types":[]},{"text":"impl Freeze for Try","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for Typeof","synthetic":true,"types":[]},{"text":"impl Freeze for Union","synthetic":true,"types":[]},{"text":"impl Freeze for Unsafe","synthetic":true,"types":[]},{"text":"impl Freeze for Unsized","synthetic":true,"types":[]},{"text":"impl Freeze for Use","synthetic":true,"types":[]},{"text":"impl Freeze for Virtual","synthetic":true,"types":[]},{"text":"impl Freeze for Where","synthetic":true,"types":[]},{"text":"impl Freeze for While","synthetic":true,"types":[]},{"text":"impl Freeze for Yield","synthetic":true,"types":[]},{"text":"impl Freeze for Add","synthetic":true,"types":[]},{"text":"impl Freeze for AddEq","synthetic":true,"types":[]},{"text":"impl Freeze for And","synthetic":true,"types":[]},{"text":"impl Freeze for AndAnd","synthetic":true,"types":[]},{"text":"impl Freeze for AndEq","synthetic":true,"types":[]},{"text":"impl Freeze for At","synthetic":true,"types":[]},{"text":"impl Freeze for Bang","synthetic":true,"types":[]},{"text":"impl Freeze for Caret","synthetic":true,"types":[]},{"text":"impl Freeze for CaretEq","synthetic":true,"types":[]},{"text":"impl Freeze for Colon","synthetic":true,"types":[]},{"text":"impl Freeze for Colon2","synthetic":true,"types":[]},{"text":"impl Freeze for Comma","synthetic":true,"types":[]},{"text":"impl Freeze for Div","synthetic":true,"types":[]},{"text":"impl Freeze for DivEq","synthetic":true,"types":[]},{"text":"impl Freeze for Dollar","synthetic":true,"types":[]},{"text":"impl Freeze for Dot","synthetic":true,"types":[]},{"text":"impl Freeze for Dot2","synthetic":true,"types":[]},{"text":"impl Freeze for Dot3","synthetic":true,"types":[]},{"text":"impl Freeze for DotDotEq","synthetic":true,"types":[]},{"text":"impl Freeze for Eq","synthetic":true,"types":[]},{"text":"impl Freeze for EqEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ge","synthetic":true,"types":[]},{"text":"impl Freeze for Gt","synthetic":true,"types":[]},{"text":"impl Freeze for Le","synthetic":true,"types":[]},{"text":"impl Freeze for Lt","synthetic":true,"types":[]},{"text":"impl Freeze for MulEq","synthetic":true,"types":[]},{"text":"impl Freeze for Ne","synthetic":true,"types":[]},{"text":"impl Freeze for Or","synthetic":true,"types":[]},{"text":"impl Freeze for OrEq","synthetic":true,"types":[]},{"text":"impl Freeze for OrOr","synthetic":true,"types":[]},{"text":"impl Freeze for Pound","synthetic":true,"types":[]},{"text":"impl Freeze for Question","synthetic":true,"types":[]},{"text":"impl Freeze for RArrow","synthetic":true,"types":[]},{"text":"impl Freeze for LArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Rem","synthetic":true,"types":[]},{"text":"impl Freeze for RemEq","synthetic":true,"types":[]},{"text":"impl Freeze for FatArrow","synthetic":true,"types":[]},{"text":"impl Freeze for Semi","synthetic":true,"types":[]},{"text":"impl Freeze for Shl","synthetic":true,"types":[]},{"text":"impl Freeze for ShlEq","synthetic":true,"types":[]},{"text":"impl Freeze for Shr","synthetic":true,"types":[]},{"text":"impl Freeze for ShrEq","synthetic":true,"types":[]},{"text":"impl Freeze for Star","synthetic":true,"types":[]},{"text":"impl Freeze for Sub","synthetic":true,"types":[]},{"text":"impl Freeze for SubEq","synthetic":true,"types":[]},{"text":"impl Freeze for Tilde","synthetic":true,"types":[]},{"text":"impl Freeze for Brace","synthetic":true,"types":[]},{"text":"impl Freeze for Bracket","synthetic":true,"types":[]},{"text":"impl Freeze for Paren","synthetic":true,"types":[]},{"text":"impl Freeze for Group","synthetic":true,"types":[]},{"text":"impl Freeze for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Punctuated&lt;T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Freeze for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Freeze for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Freeze for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Freeze for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Nothing","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Freeze for Duration","synthetic":true,"types":[]},{"text":"impl Freeze for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Freeze for Timespec","synthetic":true,"types":[]},{"text":"impl Freeze for PreciseTime","synthetic":true,"types":[]},{"text":"impl Freeze for SteadyTime","synthetic":true,"types":[]},{"text":"impl Freeze for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Freeze for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Freeze for ArrayVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for ArrayVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Freeze for TinyVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for TinyVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Freeze for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Freeze for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Freeze for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BidiClass","synthetic":true,"types":[]},{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Freeze for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for IsNormalized","synthetic":true,"types":[]}];
implementors["url"] = [{"text":"impl Freeze for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Origin","synthetic":true,"types":[]},{"text":"impl Freeze for ParseError","synthetic":true,"types":[]},{"text":"impl Freeze for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl Freeze for Position","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for Serializer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()