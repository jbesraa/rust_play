(function() {var implementors = {};
implementors["arc_swap"] = [{"text":"impl&lt;G:&nbsp;Copy, T:&nbsp;Copy&gt; Copy for MapGuard&lt;G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Copy, T:&nbsp;Copy, F:&nbsp;Copy&gt; Copy for Map&lt;A, T, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for ConstantDeref&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Constant&lt;T&gt;","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for LocalResult&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for FixedOffset","synthetic":false,"types":[]},{"text":"impl Copy for Local","synthetic":false,"types":[]},{"text":"impl Copy for Utc","synthetic":false,"types":[]},{"text":"impl Copy for NaiveDate","synthetic":false,"types":[]},{"text":"impl Copy for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl Copy for IsoWeek","synthetic":false,"types":[]},{"text":"impl Copy for NaiveTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Copy for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for SecondsFormat","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Copy for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for Pad","synthetic":false,"types":[]},{"text":"impl Copy for ParseError","synthetic":false,"types":[]},{"text":"impl Copy for RoundingError","synthetic":false,"types":[]},{"text":"impl Copy for Weekday","synthetic":false,"types":[]},{"text":"impl Copy for Month","synthetic":false,"types":[]}];
implementors["crossterm"] = [{"text":"impl Copy for MoveTo","synthetic":false,"types":[]},{"text":"impl Copy for MoveToNextLine","synthetic":false,"types":[]},{"text":"impl Copy for MoveToPreviousLine","synthetic":false,"types":[]},{"text":"impl Copy for MoveToColumn","synthetic":false,"types":[]},{"text":"impl Copy for MoveUp","synthetic":false,"types":[]},{"text":"impl Copy for MoveRight","synthetic":false,"types":[]},{"text":"impl Copy for MoveDown","synthetic":false,"types":[]},{"text":"impl Copy for MoveLeft","synthetic":false,"types":[]},{"text":"impl Copy for SavePosition","synthetic":false,"types":[]},{"text":"impl Copy for RestorePosition","synthetic":false,"types":[]},{"text":"impl Copy for Hide","synthetic":false,"types":[]},{"text":"impl Copy for Show","synthetic":false,"types":[]},{"text":"impl Copy for EnableBlinking","synthetic":false,"types":[]},{"text":"impl Copy for DisableBlinking","synthetic":false,"types":[]},{"text":"impl Copy for EnableMouseCapture","synthetic":false,"types":[]},{"text":"impl Copy for DisableMouseCapture","synthetic":false,"types":[]},{"text":"impl Copy for Event","synthetic":false,"types":[]},{"text":"impl Copy for MouseEvent","synthetic":false,"types":[]},{"text":"impl Copy for MouseButton","synthetic":false,"types":[]},{"text":"impl Copy for KeyModifiers","synthetic":false,"types":[]},{"text":"impl Copy for KeyEvent","synthetic":false,"types":[]},{"text":"impl Copy for KeyCode","synthetic":false,"types":[]},{"text":"impl Copy for Attributes","synthetic":false,"types":[]},{"text":"impl Copy for Attribute","synthetic":false,"types":[]},{"text":"impl Copy for Color","synthetic":false,"types":[]},{"text":"impl Copy for Colored","synthetic":false,"types":[]},{"text":"impl Copy for Colors","synthetic":false,"types":[]},{"text":"impl Copy for SetForegroundColor","synthetic":false,"types":[]},{"text":"impl Copy for SetBackgroundColor","synthetic":false,"types":[]},{"text":"impl Copy for SetColors","synthetic":false,"types":[]},{"text":"impl Copy for SetAttribute","synthetic":false,"types":[]},{"text":"impl Copy for SetAttributes","synthetic":false,"types":[]},{"text":"impl Copy for ResetColor","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy + Display + Clone&gt; Copy for Print&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for EnterAlternateScreen","synthetic":false,"types":[]},{"text":"impl Copy for LeaveAlternateScreen","synthetic":false,"types":[]},{"text":"impl Copy for ClearType","synthetic":false,"types":[]},{"text":"impl Copy for ScrollUp","synthetic":false,"types":[]},{"text":"impl Copy for ScrollDown","synthetic":false,"types":[]},{"text":"impl Copy for Clear","synthetic":false,"types":[]},{"text":"impl Copy for SetSize","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for SetTitle&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["git2"] = [{"text":"impl Copy for ErrorCode","synthetic":false,"types":[]},{"text":"impl Copy for ErrorClass","synthetic":false,"types":[]},{"text":"impl Copy for RepositoryState","synthetic":false,"types":[]},{"text":"impl Copy for Direction","synthetic":false,"types":[]},{"text":"impl Copy for ResetType","synthetic":false,"types":[]},{"text":"impl Copy for ObjectType","synthetic":false,"types":[]},{"text":"impl Copy for ReferenceType","synthetic":false,"types":[]},{"text":"impl Copy for BranchType","synthetic":false,"types":[]},{"text":"impl Copy for ConfigLevel","synthetic":false,"types":[]},{"text":"impl Copy for FileFavor","synthetic":false,"types":[]},{"text":"impl Copy for Sort","synthetic":false,"types":[]},{"text":"impl Copy for CredentialType","synthetic":false,"types":[]},{"text":"impl Copy for IndexEntryFlag","synthetic":false,"types":[]},{"text":"impl Copy for IndexEntryExtendedFlag","synthetic":false,"types":[]},{"text":"impl Copy for IndexAddOption","synthetic":false,"types":[]},{"text":"impl Copy for RepositoryOpenFlags","synthetic":false,"types":[]},{"text":"impl Copy for RevparseMode","synthetic":false,"types":[]},{"text":"impl Copy for MergeAnalysis","synthetic":false,"types":[]},{"text":"impl Copy for MergePreference","synthetic":false,"types":[]},{"text":"impl Copy for CloneLocal","synthetic":false,"types":[]},{"text":"impl Copy for Service","synthetic":false,"types":[]},{"text":"impl Copy for ApplyLocation","synthetic":false,"types":[]},{"text":"impl Copy for DiffBinaryKind","synthetic":false,"types":[]},{"text":"impl Copy for Oid","synthetic":false,"types":[]},{"text":"impl Copy for StatusShow","synthetic":false,"types":[]},{"text":"impl Copy for Time","synthetic":false,"types":[]},{"text":"impl Copy for IndexTime","synthetic":false,"types":[]},{"text":"impl Copy for Status","synthetic":false,"types":[]},{"text":"impl Copy for RepositoryInitMode","synthetic":false,"types":[]},{"text":"impl Copy for Delta","synthetic":false,"types":[]},{"text":"impl Copy for FileMode","synthetic":false,"types":[]},{"text":"impl Copy for SubmoduleStatus","synthetic":false,"types":[]},{"text":"impl Copy for PathspecFlags","synthetic":false,"types":[]},{"text":"impl Copy for CheckoutNotificationType","synthetic":false,"types":[]},{"text":"impl Copy for DiffFormat","synthetic":false,"types":[]},{"text":"impl Copy for DiffStatsFormat","synthetic":false,"types":[]},{"text":"impl Copy for StashApplyFlags","synthetic":false,"types":[]},{"text":"impl Copy for StashFlags","synthetic":false,"types":[]},{"text":"impl Copy for AttrCheckFlags","synthetic":false,"types":[]},{"text":"impl Copy for DiffFlags","synthetic":false,"types":[]}];
implementors["idna"] = [{"text":"impl Copy for Config","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl Copy for DIR","synthetic":false,"types":[]},{"text":"impl Copy for group","synthetic":false,"types":[]},{"text":"impl Copy for utimbuf","synthetic":false,"types":[]},{"text":"impl Copy for timeval","synthetic":false,"types":[]},{"text":"impl Copy for timespec","synthetic":false,"types":[]},{"text":"impl Copy for rlimit","synthetic":false,"types":[]},{"text":"impl Copy for rusage","synthetic":false,"types":[]},{"text":"impl Copy for ipv6_mreq","synthetic":false,"types":[]},{"text":"impl Copy for hostent","synthetic":false,"types":[]},{"text":"impl Copy for iovec","synthetic":false,"types":[]},{"text":"impl Copy for pollfd","synthetic":false,"types":[]},{"text":"impl Copy for winsize","synthetic":false,"types":[]},{"text":"impl Copy for linger","synthetic":false,"types":[]},{"text":"impl Copy for sigval","synthetic":false,"types":[]},{"text":"impl Copy for itimerval","synthetic":false,"types":[]},{"text":"impl Copy for tms","synthetic":false,"types":[]},{"text":"impl Copy for servent","synthetic":false,"types":[]},{"text":"impl Copy for protoent","synthetic":false,"types":[]},{"text":"impl Copy for FILE","synthetic":false,"types":[]},{"text":"impl Copy for fpos_t","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_in6","synthetic":false,"types":[]},{"text":"impl Copy for passwd","synthetic":false,"types":[]},{"text":"impl Copy for ifaddrs","synthetic":false,"types":[]},{"text":"impl Copy for fd_set","synthetic":false,"types":[]},{"text":"impl Copy for tm","synthetic":false,"types":[]},{"text":"impl Copy for msghdr","synthetic":false,"types":[]},{"text":"impl Copy for cmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for fsid_t","synthetic":false,"types":[]},{"text":"impl Copy for if_nameindex","synthetic":false,"types":[]},{"text":"impl Copy for regex_t","synthetic":false,"types":[]},{"text":"impl Copy for regmatch_t","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_un","synthetic":false,"types":[]},{"text":"impl Copy for utsname","synthetic":false,"types":[]},{"text":"impl Copy for timezone","synthetic":false,"types":[]},{"text":"impl Copy for ip_mreq","synthetic":false,"types":[]},{"text":"impl Copy for aiocb","synthetic":false,"types":[]},{"text":"impl Copy for glob_t","synthetic":false,"types":[]},{"text":"impl Copy for addrinfo","synthetic":false,"types":[]},{"text":"impl Copy for mach_timebase_info","synthetic":false,"types":[]},{"text":"impl Copy for stat","synthetic":false,"types":[]},{"text":"impl Copy for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Copy for siginfo_t","synthetic":false,"types":[]},{"text":"impl Copy for sigaction","synthetic":false,"types":[]},{"text":"impl Copy for stack_t","synthetic":false,"types":[]},{"text":"impl Copy for fstore_t","synthetic":false,"types":[]},{"text":"impl Copy for radvisory","synthetic":false,"types":[]},{"text":"impl Copy for statvfs","synthetic":false,"types":[]},{"text":"impl Copy for Dl_info","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_in","synthetic":false,"types":[]},{"text":"impl Copy for kevent64_s","synthetic":false,"types":[]},{"text":"impl Copy for dqblk","synthetic":false,"types":[]},{"text":"impl Copy for if_msghdr","synthetic":false,"types":[]},{"text":"impl Copy for termios","synthetic":false,"types":[]},{"text":"impl Copy for flock","synthetic":false,"types":[]},{"text":"impl Copy for sf_hdtr","synthetic":false,"types":[]},{"text":"impl Copy for lconv","synthetic":false,"types":[]},{"text":"impl Copy for proc_taskinfo","synthetic":false,"types":[]},{"text":"impl Copy for proc_bsdinfo","synthetic":false,"types":[]},{"text":"impl Copy for proc_taskallinfo","synthetic":false,"types":[]},{"text":"impl Copy for xsw_usage","synthetic":false,"types":[]},{"text":"impl Copy for xucred","synthetic":false,"types":[]},{"text":"impl Copy for mach_header","synthetic":false,"types":[]},{"text":"impl Copy for mach_header_64","synthetic":false,"types":[]},{"text":"impl Copy for segment_command","synthetic":false,"types":[]},{"text":"impl Copy for segment_command_64","synthetic":false,"types":[]},{"text":"impl Copy for load_command","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_dl","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_inarp","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_ctl","synthetic":false,"types":[]},{"text":"impl Copy for in_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for in6_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for ipc_perm","synthetic":false,"types":[]},{"text":"impl Copy for sembuf","synthetic":false,"types":[]},{"text":"impl Copy for arphdr","synthetic":false,"types":[]},{"text":"impl Copy for in_addr","synthetic":false,"types":[]},{"text":"impl Copy for sa_endpoints_t","synthetic":false,"types":[]},{"text":"impl Copy for timex","synthetic":false,"types":[]},{"text":"impl Copy for ntptimeval","synthetic":false,"types":[]},{"text":"impl Copy for kevent","synthetic":false,"types":[]},{"text":"impl Copy for semid_ds","synthetic":false,"types":[]},{"text":"impl Copy for shmid_ds","synthetic":false,"types":[]},{"text":"impl Copy for proc_threadinfo","synthetic":false,"types":[]},{"text":"impl Copy for statfs","synthetic":false,"types":[]},{"text":"impl Copy for dirent","synthetic":false,"types":[]},{"text":"impl Copy for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_storage","synthetic":false,"types":[]},{"text":"impl Copy for utmpx","synthetic":false,"types":[]},{"text":"impl Copy for sigevent","synthetic":false,"types":[]},{"text":"impl Copy for semun","synthetic":false,"types":[]},{"text":"impl Copy for timeval32","synthetic":false,"types":[]},{"text":"impl Copy for if_data","synthetic":false,"types":[]},{"text":"impl Copy for bpf_hdr","synthetic":false,"types":[]},{"text":"impl Copy for ucontext_t","synthetic":false,"types":[]},{"text":"impl Copy for __darwin_mcontext64","synthetic":false,"types":[]},{"text":"impl Copy for __darwin_x86_exception_state64","synthetic":false,"types":[]},{"text":"impl Copy for __darwin_x86_thread_state64","synthetic":false,"types":[]},{"text":"impl Copy for __darwin_x86_float_state64","synthetic":false,"types":[]},{"text":"impl Copy for __darwin_mmst_reg","synthetic":false,"types":[]},{"text":"impl Copy for __darwin_xmm_reg","synthetic":false,"types":[]},{"text":"impl Copy for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Copy for max_align_t","synthetic":false,"types":[]},{"text":"impl Copy for in6_addr","synthetic":false,"types":[]}];
implementors["libgit2_sys"] = [{"text":"impl Copy for git_oid","synthetic":false,"types":[]},{"text":"impl Copy for git_strarray","synthetic":false,"types":[]},{"text":"impl Copy for git_oidarray","synthetic":false,"types":[]},{"text":"impl Copy for git_time","synthetic":false,"types":[]},{"text":"impl Copy for git_indexer_progress","synthetic":false,"types":[]},{"text":"impl Copy for git_buf","synthetic":false,"types":[]},{"text":"impl Copy for git_blame_options","synthetic":false,"types":[]},{"text":"impl Copy for git_blame_hunk","synthetic":false,"types":[]},{"text":"impl Copy for git_index_entry","synthetic":false,"types":[]},{"text":"impl Copy for git_index_time","synthetic":false,"types":[]}];
implementors["libssh2_sys"] = [{"text":"impl Copy for LIBSSH2_SFTP_ATTRIBUTES","synthetic":false,"types":[]},{"text":"impl Copy for LIBSSH2_SFTP_STATVFS","synthetic":false,"types":[]}];
implementors["libz_sys"] = [{"text":"impl Copy for gz_header","synthetic":false,"types":[]},{"text":"impl Copy for z_stream","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Copy for Level","synthetic":false,"types":[]},{"text":"impl Copy for LevelFilter","synthetic":false,"types":[]}];
implementors["mio"] = [{"text":"impl Copy for Interest","synthetic":false,"types":[]},{"text":"impl Copy for Token","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A:&nbsp;Copy&gt; Copy for ExtendedGcd&lt;A&gt;","synthetic":false,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Copy for point_conversion_form_t","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Copy for WaitTimeoutResult","synthetic":false,"types":[]},{"text":"impl Copy for OnceState","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Copy for ParkResult","synthetic":false,"types":[]},{"text":"impl Copy for UnparkResult","synthetic":false,"types":[]},{"text":"impl Copy for RequeueOp","synthetic":false,"types":[]},{"text":"impl Copy for FilterOp","synthetic":false,"types":[]},{"text":"impl Copy for UnparkToken","synthetic":false,"types":[]},{"text":"impl Copy for ParkToken","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Copy for Span","synthetic":false,"types":[]},{"text":"impl Copy for Delimiter","synthetic":false,"types":[]},{"text":"impl Copy for Spacing","synthetic":false,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Copy for SigId","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Copy for Underscore","synthetic":false,"types":[]},{"text":"impl Copy for Abstract","synthetic":false,"types":[]},{"text":"impl Copy for As","synthetic":false,"types":[]},{"text":"impl Copy for Async","synthetic":false,"types":[]},{"text":"impl Copy for Auto","synthetic":false,"types":[]},{"text":"impl Copy for Await","synthetic":false,"types":[]},{"text":"impl Copy for Become","synthetic":false,"types":[]},{"text":"impl Copy for Box","synthetic":false,"types":[]},{"text":"impl Copy for Break","synthetic":false,"types":[]},{"text":"impl Copy for Const","synthetic":false,"types":[]},{"text":"impl Copy for Continue","synthetic":false,"types":[]},{"text":"impl Copy for Crate","synthetic":false,"types":[]},{"text":"impl Copy for Default","synthetic":false,"types":[]},{"text":"impl Copy for Do","synthetic":false,"types":[]},{"text":"impl Copy for Dyn","synthetic":false,"types":[]},{"text":"impl Copy for Else","synthetic":false,"types":[]},{"text":"impl Copy for Enum","synthetic":false,"types":[]},{"text":"impl Copy for Extern","synthetic":false,"types":[]},{"text":"impl Copy for Final","synthetic":false,"types":[]},{"text":"impl Copy for Fn","synthetic":false,"types":[]},{"text":"impl Copy for For","synthetic":false,"types":[]},{"text":"impl Copy for If","synthetic":false,"types":[]},{"text":"impl Copy for Impl","synthetic":false,"types":[]},{"text":"impl Copy for In","synthetic":false,"types":[]},{"text":"impl Copy for Let","synthetic":false,"types":[]},{"text":"impl Copy for Loop","synthetic":false,"types":[]},{"text":"impl Copy for Macro","synthetic":false,"types":[]},{"text":"impl Copy for Match","synthetic":false,"types":[]},{"text":"impl Copy for Mod","synthetic":false,"types":[]},{"text":"impl Copy for Move","synthetic":false,"types":[]},{"text":"impl Copy for Mut","synthetic":false,"types":[]},{"text":"impl Copy for Override","synthetic":false,"types":[]},{"text":"impl Copy for Priv","synthetic":false,"types":[]},{"text":"impl Copy for Pub","synthetic":false,"types":[]},{"text":"impl Copy for Ref","synthetic":false,"types":[]},{"text":"impl Copy for Return","synthetic":false,"types":[]},{"text":"impl Copy for SelfType","synthetic":false,"types":[]},{"text":"impl Copy for SelfValue","synthetic":false,"types":[]},{"text":"impl Copy for Static","synthetic":false,"types":[]},{"text":"impl Copy for Struct","synthetic":false,"types":[]},{"text":"impl Copy for Super","synthetic":false,"types":[]},{"text":"impl Copy for Trait","synthetic":false,"types":[]},{"text":"impl Copy for Try","synthetic":false,"types":[]},{"text":"impl Copy for Type","synthetic":false,"types":[]},{"text":"impl Copy for Typeof","synthetic":false,"types":[]},{"text":"impl Copy for Union","synthetic":false,"types":[]},{"text":"impl Copy for Unsafe","synthetic":false,"types":[]},{"text":"impl Copy for Unsized","synthetic":false,"types":[]},{"text":"impl Copy for Use","synthetic":false,"types":[]},{"text":"impl Copy for Virtual","synthetic":false,"types":[]},{"text":"impl Copy for Where","synthetic":false,"types":[]},{"text":"impl Copy for While","synthetic":false,"types":[]},{"text":"impl Copy for Yield","synthetic":false,"types":[]},{"text":"impl Copy for Add","synthetic":false,"types":[]},{"text":"impl Copy for AddEq","synthetic":false,"types":[]},{"text":"impl Copy for And","synthetic":false,"types":[]},{"text":"impl Copy for AndAnd","synthetic":false,"types":[]},{"text":"impl Copy for AndEq","synthetic":false,"types":[]},{"text":"impl Copy for At","synthetic":false,"types":[]},{"text":"impl Copy for Bang","synthetic":false,"types":[]},{"text":"impl Copy for Caret","synthetic":false,"types":[]},{"text":"impl Copy for CaretEq","synthetic":false,"types":[]},{"text":"impl Copy for Colon","synthetic":false,"types":[]},{"text":"impl Copy for Colon2","synthetic":false,"types":[]},{"text":"impl Copy for Comma","synthetic":false,"types":[]},{"text":"impl Copy for Div","synthetic":false,"types":[]},{"text":"impl Copy for DivEq","synthetic":false,"types":[]},{"text":"impl Copy for Dollar","synthetic":false,"types":[]},{"text":"impl Copy for Dot","synthetic":false,"types":[]},{"text":"impl Copy for Dot2","synthetic":false,"types":[]},{"text":"impl Copy for Dot3","synthetic":false,"types":[]},{"text":"impl Copy for DotDotEq","synthetic":false,"types":[]},{"text":"impl Copy for Eq","synthetic":false,"types":[]},{"text":"impl Copy for EqEq","synthetic":false,"types":[]},{"text":"impl Copy for Ge","synthetic":false,"types":[]},{"text":"impl Copy for Gt","synthetic":false,"types":[]},{"text":"impl Copy for Le","synthetic":false,"types":[]},{"text":"impl Copy for Lt","synthetic":false,"types":[]},{"text":"impl Copy for MulEq","synthetic":false,"types":[]},{"text":"impl Copy for Ne","synthetic":false,"types":[]},{"text":"impl Copy for Or","synthetic":false,"types":[]},{"text":"impl Copy for OrEq","synthetic":false,"types":[]},{"text":"impl Copy for OrOr","synthetic":false,"types":[]},{"text":"impl Copy for Pound","synthetic":false,"types":[]},{"text":"impl Copy for Question","synthetic":false,"types":[]},{"text":"impl Copy for RArrow","synthetic":false,"types":[]},{"text":"impl Copy for LArrow","synthetic":false,"types":[]},{"text":"impl Copy for Rem","synthetic":false,"types":[]},{"text":"impl Copy for RemEq","synthetic":false,"types":[]},{"text":"impl Copy for FatArrow","synthetic":false,"types":[]},{"text":"impl Copy for Semi","synthetic":false,"types":[]},{"text":"impl Copy for Shl","synthetic":false,"types":[]},{"text":"impl Copy for ShlEq","synthetic":false,"types":[]},{"text":"impl Copy for Shr","synthetic":false,"types":[]},{"text":"impl Copy for ShrEq","synthetic":false,"types":[]},{"text":"impl Copy for Star","synthetic":false,"types":[]},{"text":"impl Copy for Sub","synthetic":false,"types":[]},{"text":"impl Copy for SubEq","synthetic":false,"types":[]},{"text":"impl Copy for Tilde","synthetic":false,"types":[]},{"text":"impl Copy for Brace","synthetic":false,"types":[]},{"text":"impl Copy for Bracket","synthetic":false,"types":[]},{"text":"impl Copy for Paren","synthetic":false,"types":[]},{"text":"impl Copy for Group","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for AttrStyle","synthetic":false,"types":[]},{"text":"impl Copy for BinOp","synthetic":false,"types":[]},{"text":"impl Copy for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Copy for UnOp","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Copy for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl Copy for Duration","synthetic":false,"types":[]},{"text":"impl Copy for OutOfRangeError","synthetic":false,"types":[]},{"text":"impl Copy for Timespec","synthetic":false,"types":[]},{"text":"impl Copy for PreciseTime","synthetic":false,"types":[]},{"text":"impl Copy for SteadyTime","synthetic":false,"types":[]},{"text":"impl Copy for Tm","synthetic":false,"types":[]},{"text":"impl Copy for ParseError","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Copy + Array&gt; Copy for ArrayVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Copy for Level","synthetic":false,"types":[]},{"text":"impl Copy for BidiClass","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl Copy for ParseError","synthetic":false,"types":[]},{"text":"impl Copy for SyntaxViolation","synthetic":false,"types":[]},{"text":"impl Copy for Position","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Parse&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for ParseOptions&lt;'a&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()