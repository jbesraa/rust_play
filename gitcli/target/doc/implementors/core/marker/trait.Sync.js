(function() {var implementors = {};
implementors["arc_swap"] = [{"text":"impl&lt;'l, T&gt; Sync for Guard&lt;'l, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for ArcSwapAny&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DirectDeref&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for DynGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A, T, F&gt; Sync for Map&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ConstantDeref&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Constant&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T&gt; Sync for Cache&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T, F&gt; Sync for MapCache&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Shard","synthetic":true,"types":[]},{"text":"impl Sync for Global","synthetic":true,"types":[]},{"text":"impl Sync for PrivateUnsharded","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for PrivateSharded&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;G, T&gt; Sync for MapGuard&lt;G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&amp;'a T: Sync,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl&lt;Tz&gt; Sync for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Sync for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl Sync for ParseMonthError","synthetic":true,"types":[]},{"text":"impl Sync for SecondsFormat","synthetic":true,"types":[]},{"text":"impl Sync for RoundingError","synthetic":true,"types":[]},{"text":"impl Sync for Weekday","synthetic":true,"types":[]},{"text":"impl Sync for Month","synthetic":true,"types":[]},{"text":"impl Sync for FixedOffset","synthetic":true,"types":[]},{"text":"impl Sync for Local","synthetic":true,"types":[]},{"text":"impl Sync for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for NaiveDate","synthetic":true,"types":[]},{"text":"impl Sync for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl Sync for IsoWeek","synthetic":true,"types":[]},{"text":"impl Sync for NaiveTime","synthetic":true,"types":[]},{"text":"impl Sync for Parsed","synthetic":true,"types":[]},{"text":"impl Sync for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Sync for InternalFixed","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Pad","synthetic":true,"types":[]},{"text":"impl Sync for Numeric","synthetic":true,"types":[]},{"text":"impl Sync for Fixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["crossterm"] = [{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for MoveTo","synthetic":true,"types":[]},{"text":"impl Sync for MoveToNextLine","synthetic":true,"types":[]},{"text":"impl Sync for MoveToPreviousLine","synthetic":true,"types":[]},{"text":"impl Sync for MoveToColumn","synthetic":true,"types":[]},{"text":"impl Sync for MoveUp","synthetic":true,"types":[]},{"text":"impl Sync for MoveRight","synthetic":true,"types":[]},{"text":"impl Sync for MoveDown","synthetic":true,"types":[]},{"text":"impl Sync for MoveLeft","synthetic":true,"types":[]},{"text":"impl Sync for SavePosition","synthetic":true,"types":[]},{"text":"impl Sync for RestorePosition","synthetic":true,"types":[]},{"text":"impl Sync for Hide","synthetic":true,"types":[]},{"text":"impl Sync for Show","synthetic":true,"types":[]},{"text":"impl Sync for EnableBlinking","synthetic":true,"types":[]},{"text":"impl Sync for DisableBlinking","synthetic":true,"types":[]},{"text":"impl Sync for EnableMouseCapture","synthetic":true,"types":[]},{"text":"impl Sync for DisableMouseCapture","synthetic":true,"types":[]},{"text":"impl Sync for KeyModifiers","synthetic":true,"types":[]},{"text":"impl Sync for KeyEvent","synthetic":true,"types":[]},{"text":"impl Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for MouseEvent","synthetic":true,"types":[]},{"text":"impl Sync for MouseButton","synthetic":true,"types":[]},{"text":"impl Sync for KeyCode","synthetic":true,"types":[]},{"text":"impl Sync for Attributes","synthetic":true,"types":[]},{"text":"impl Sync for ContentStyle","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Sync for StyledContent&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Colors","synthetic":true,"types":[]},{"text":"impl Sync for SetForegroundColor","synthetic":true,"types":[]},{"text":"impl Sync for SetBackgroundColor","synthetic":true,"types":[]},{"text":"impl Sync for SetColors","synthetic":true,"types":[]},{"text":"impl Sync for SetAttribute","synthetic":true,"types":[]},{"text":"impl Sync for SetAttributes","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Sync for PrintStyledContent&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ResetColor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Print&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Attribute","synthetic":true,"types":[]},{"text":"impl Sync for Color","synthetic":true,"types":[]},{"text":"impl Sync for Colored","synthetic":true,"types":[]},{"text":"impl Sync for EnterAlternateScreen","synthetic":true,"types":[]},{"text":"impl Sync for LeaveAlternateScreen","synthetic":true,"types":[]},{"text":"impl Sync for ScrollUp","synthetic":true,"types":[]},{"text":"impl Sync for ScrollDown","synthetic":true,"types":[]},{"text":"impl Sync for Clear","synthetic":true,"types":[]},{"text":"impl Sync for SetSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SetTitle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ClearType","synthetic":true,"types":[]}];
implementors["git2"] = [{"text":"impl&lt;'cb&gt; !Sync for ApplyOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Blame&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'blame&gt; !Sync for BlameHunk&lt;'blame&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'blame&gt; !Sync for BlameIter&lt;'blame&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BlameOptions","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Blob&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for BlobWriter&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Branch&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Branches&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Buf","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; !Sync for CherrypickOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Commit&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'commit, 'repo&gt; !Sync for Parents&lt;'commit, 'repo&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Config","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; !Sync for ConfigEntries&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; !Sync for ConfigEntry&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Cred","synthetic":true,"types":[]},{"text":"impl Sync for CredentialHelper","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Describe&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DescribeFormatOptions","synthetic":true,"types":[]},{"text":"impl !Sync for DescribeOptions","synthetic":true,"types":[]},{"text":"impl&lt;'diff&gt; !Sync for Deltas&lt;'diff&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Diff&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DiffDelta&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DiffFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DiffOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DiffBinary&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DiffBinaryFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DiffFindOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DiffHunk&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DiffLine&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DiffStats","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for Index","synthetic":true,"types":[]},{"text":"impl Sync for IndexConflict","synthetic":true,"types":[]},{"text":"impl&lt;'index&gt; !Sync for IndexConflicts&lt;'index&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'index&gt; !Sync for IndexEntries&lt;'index&gt;","synthetic":true,"types":[]},{"text":"impl Sync for IndexEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Progress&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'odb&gt; !Sync for Mempack&lt;'odb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for AnnotatedCommit&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MergeOptions","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Note&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Notes&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Object&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Odb&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for OdbObject&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for OdbPackwriter&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for OdbReader&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for OdbWriter&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Oid","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for PackBuilder&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'buffers&gt; !Sync for Patch&lt;'buffers&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Pathspec","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; !Sync for PathspecFailedEntries&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ps&gt; !Sync for PathspecMatchList&lt;'ps&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; !Sync for PathspecDiffEntries&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; !Sync for PathspecEntries&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ProxyOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Rebase&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'rebase&gt; !Sync for RebaseOperation&lt;'rebase&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; !Sync for RebaseOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Reference&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo, 'references&gt; !Sync for ReferenceNames&lt;'repo, 'references&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for References&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Reflog","synthetic":true,"types":[]},{"text":"impl&lt;'reflog&gt; !Sync for ReflogEntry&lt;'reflog&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'reflog&gt; !Sync for ReflogIter&lt;'reflog&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'remote&gt; !Sync for Refspec&lt;'remote&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; !Sync for FetchOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; !Sync for PushOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'remote&gt; !Sync for Refspecs&lt;'remote&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Remote&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo, 'connection, 'cb&gt; !Sync for RemoteConnection&lt;'repo, 'connection, 'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'remote&gt; !Sync for RemoteHead&lt;'remote&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RemoteCallbacks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Repository","synthetic":true,"types":[]},{"text":"impl Sync for RepositoryInitOptions","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; !Sync for RevertOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Revspec&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Revwalk&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Signature&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; !Sync for StashApplyOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'statuses&gt; !Sync for StatusEntry&lt;'statuses&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'statuses&gt; !Sync for StatusIter&lt;'statuses&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for StatusOptions","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Statuses&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Submodule&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; !Sync for SubmoduleUpdateOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Tag&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Sync for IndexTime","synthetic":true,"types":[]},{"text":"impl Sync for Time","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for Tree&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'tree&gt; !Sync for TreeEntry&lt;'tree&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'tree&gt; !Sync for TreeIter&lt;'tree&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; !Sync for TreeBuilder&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Sort","synthetic":true,"types":[]},{"text":"impl Sync for CredentialType","synthetic":true,"types":[]},{"text":"impl Sync for IndexEntryFlag","synthetic":true,"types":[]},{"text":"impl Sync for IndexEntryExtendedFlag","synthetic":true,"types":[]},{"text":"impl Sync for IndexAddOption","synthetic":true,"types":[]},{"text":"impl Sync for RepositoryOpenFlags","synthetic":true,"types":[]},{"text":"impl Sync for RevparseMode","synthetic":true,"types":[]},{"text":"impl Sync for MergeAnalysis","synthetic":true,"types":[]},{"text":"impl Sync for MergePreference","synthetic":true,"types":[]},{"text":"impl Sync for Status","synthetic":true,"types":[]},{"text":"impl Sync for RepositoryInitMode","synthetic":true,"types":[]},{"text":"impl Sync for SubmoduleStatus","synthetic":true,"types":[]},{"text":"impl Sync for PathspecFlags","synthetic":true,"types":[]},{"text":"impl Sync for CheckoutNotificationType","synthetic":true,"types":[]},{"text":"impl Sync for DiffStatsFormat","synthetic":true,"types":[]},{"text":"impl Sync for StashApplyFlags","synthetic":true,"types":[]},{"text":"impl Sync for StashFlags","synthetic":true,"types":[]},{"text":"impl Sync for AttrCheckFlags","synthetic":true,"types":[]},{"text":"impl Sync for DiffFlags","synthetic":true,"types":[]},{"text":"impl Sync for ApplyLocation","synthetic":true,"types":[]},{"text":"impl Sync for DiffBinaryKind","synthetic":true,"types":[]},{"text":"impl Sync for PackBuilderStage","synthetic":true,"types":[]},{"text":"impl Sync for RebaseOperationType","synthetic":true,"types":[]},{"text":"impl Sync for StatusShow","synthetic":true,"types":[]},{"text":"impl Sync for TreeWalkMode","synthetic":true,"types":[]},{"text":"impl Sync for TreeWalkResult","synthetic":true,"types":[]},{"text":"impl Sync for ErrorCode","synthetic":true,"types":[]},{"text":"impl Sync for ErrorClass","synthetic":true,"types":[]},{"text":"impl Sync for RepositoryState","synthetic":true,"types":[]},{"text":"impl Sync for Direction","synthetic":true,"types":[]},{"text":"impl Sync for ResetType","synthetic":true,"types":[]},{"text":"impl Sync for ObjectType","synthetic":true,"types":[]},{"text":"impl Sync for ReferenceType","synthetic":true,"types":[]},{"text":"impl Sync for BranchType","synthetic":true,"types":[]},{"text":"impl Sync for ConfigLevel","synthetic":true,"types":[]},{"text":"impl Sync for FileFavor","synthetic":true,"types":[]},{"text":"impl Sync for Delta","synthetic":true,"types":[]},{"text":"impl Sync for FileMode","synthetic":true,"types":[]},{"text":"impl Sync for SubmoduleIgnore","synthetic":true,"types":[]},{"text":"impl Sync for DiffFormat","synthetic":true,"types":[]},{"text":"impl Sync for AutotagOption","synthetic":true,"types":[]},{"text":"impl Sync for FetchPrune","synthetic":true,"types":[]},{"text":"impl Sync for StashApplyProgress","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; !Sync for RepoBuilder&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; !Sync for CheckoutBuilder&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CloneLocal","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Cert&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CertHostkey&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CertX509&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for OidArray","synthetic":true,"types":[]},{"text":"impl !Sync for StringArray","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for IterBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Transport","synthetic":true,"types":[]},{"text":"impl Sync for Service","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl Sync for Config","synthetic":true,"types":[]},{"text":"impl Sync for Errors","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl !Sync for group","synthetic":true,"types":[]},{"text":"impl Sync for utimbuf","synthetic":true,"types":[]},{"text":"impl Sync for timeval","synthetic":true,"types":[]},{"text":"impl Sync for timespec","synthetic":true,"types":[]},{"text":"impl Sync for rlimit","synthetic":true,"types":[]},{"text":"impl Sync for rusage","synthetic":true,"types":[]},{"text":"impl Sync for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl !Sync for hostent","synthetic":true,"types":[]},{"text":"impl !Sync for iovec","synthetic":true,"types":[]},{"text":"impl Sync for pollfd","synthetic":true,"types":[]},{"text":"impl Sync for winsize","synthetic":true,"types":[]},{"text":"impl Sync for linger","synthetic":true,"types":[]},{"text":"impl !Sync for sigval","synthetic":true,"types":[]},{"text":"impl Sync for itimerval","synthetic":true,"types":[]},{"text":"impl Sync for tms","synthetic":true,"types":[]},{"text":"impl !Sync for servent","synthetic":true,"types":[]},{"text":"impl !Sync for protoent","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl !Sync for passwd","synthetic":true,"types":[]},{"text":"impl !Sync for ifaddrs","synthetic":true,"types":[]},{"text":"impl Sync for fd_set","synthetic":true,"types":[]},{"text":"impl !Sync for tm","synthetic":true,"types":[]},{"text":"impl !Sync for msghdr","synthetic":true,"types":[]},{"text":"impl Sync for cmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for fsid_t","synthetic":true,"types":[]},{"text":"impl !Sync for if_nameindex","synthetic":true,"types":[]},{"text":"impl !Sync for regex_t","synthetic":true,"types":[]},{"text":"impl Sync for regmatch_t","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Sync for utsname","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreq","synthetic":true,"types":[]},{"text":"impl !Sync for aiocb","synthetic":true,"types":[]},{"text":"impl !Sync for glob_t","synthetic":true,"types":[]},{"text":"impl !Sync for addrinfo","synthetic":true,"types":[]},{"text":"impl Sync for mach_timebase_info","synthetic":true,"types":[]},{"text":"impl Sync for stat","synthetic":true,"types":[]},{"text":"impl Sync for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl !Sync for siginfo_t","synthetic":true,"types":[]},{"text":"impl Sync for sigaction","synthetic":true,"types":[]},{"text":"impl !Sync for stack_t","synthetic":true,"types":[]},{"text":"impl Sync for fstore_t","synthetic":true,"types":[]},{"text":"impl Sync for radvisory","synthetic":true,"types":[]},{"text":"impl Sync for statvfs","synthetic":true,"types":[]},{"text":"impl !Sync for Dl_info","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Sync for kevent64_s","synthetic":true,"types":[]},{"text":"impl Sync for dqblk","synthetic":true,"types":[]},{"text":"impl Sync for if_msghdr","synthetic":true,"types":[]},{"text":"impl Sync for termios","synthetic":true,"types":[]},{"text":"impl Sync for flock","synthetic":true,"types":[]},{"text":"impl !Sync for sf_hdtr","synthetic":true,"types":[]},{"text":"impl !Sync for lconv","synthetic":true,"types":[]},{"text":"impl Sync for proc_taskinfo","synthetic":true,"types":[]},{"text":"impl Sync for proc_bsdinfo","synthetic":true,"types":[]},{"text":"impl Sync for proc_taskallinfo","synthetic":true,"types":[]},{"text":"impl Sync for xsw_usage","synthetic":true,"types":[]},{"text":"impl Sync for xucred","synthetic":true,"types":[]},{"text":"impl Sync for mach_header","synthetic":true,"types":[]},{"text":"impl Sync for mach_header_64","synthetic":true,"types":[]},{"text":"impl Sync for segment_command","synthetic":true,"types":[]},{"text":"impl Sync for segment_command_64","synthetic":true,"types":[]},{"text":"impl Sync for load_command","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_dl","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_inarp","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_ctl","synthetic":true,"types":[]},{"text":"impl Sync for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Sync for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Sync for ipc_perm","synthetic":true,"types":[]},{"text":"impl Sync for sembuf","synthetic":true,"types":[]},{"text":"impl Sync for arphdr","synthetic":true,"types":[]},{"text":"impl Sync for in_addr","synthetic":true,"types":[]},{"text":"impl !Sync for sa_endpoints_t","synthetic":true,"types":[]},{"text":"impl Sync for timex","synthetic":true,"types":[]},{"text":"impl Sync for ntptimeval","synthetic":true,"types":[]},{"text":"impl !Sync for kevent","synthetic":true,"types":[]},{"text":"impl Sync for semid_ds","synthetic":true,"types":[]},{"text":"impl !Sync for shmid_ds","synthetic":true,"types":[]},{"text":"impl Sync for proc_threadinfo","synthetic":true,"types":[]},{"text":"impl Sync for statfs","synthetic":true,"types":[]},{"text":"impl Sync for dirent","synthetic":true,"types":[]},{"text":"impl Sync for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Sync for utmpx","synthetic":true,"types":[]},{"text":"impl !Sync for sigevent","synthetic":true,"types":[]},{"text":"impl Sync for timeval32","synthetic":true,"types":[]},{"text":"impl Sync for if_data","synthetic":true,"types":[]},{"text":"impl Sync for bpf_hdr","synthetic":true,"types":[]},{"text":"impl !Sync for ucontext_t","synthetic":true,"types":[]},{"text":"impl Sync for __darwin_mcontext64","synthetic":true,"types":[]},{"text":"impl Sync for __darwin_x86_exception_state64","synthetic":true,"types":[]},{"text":"impl Sync for __darwin_x86_thread_state64","synthetic":true,"types":[]},{"text":"impl Sync for __darwin_x86_float_state64","synthetic":true,"types":[]},{"text":"impl Sync for __darwin_mmst_reg","synthetic":true,"types":[]},{"text":"impl Sync for __darwin_xmm_reg","synthetic":true,"types":[]},{"text":"impl Sync for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Sync for max_align_t","synthetic":true,"types":[]},{"text":"impl Sync for in6_addr","synthetic":true,"types":[]},{"text":"impl !Sync for semun","synthetic":true,"types":[]},{"text":"impl Sync for DIR","synthetic":true,"types":[]},{"text":"impl Sync for FILE","synthetic":true,"types":[]},{"text":"impl Sync for fpos_t","synthetic":true,"types":[]},{"text":"impl Sync for timezone","synthetic":true,"types":[]}];
implementors["libgit2_sys"] = [{"text":"impl !Sync for git_revspec","synthetic":true,"types":[]},{"text":"impl !Sync for git_error","synthetic":true,"types":[]},{"text":"impl Sync for git_oid","synthetic":true,"types":[]},{"text":"impl !Sync for git_strarray","synthetic":true,"types":[]},{"text":"impl !Sync for git_oidarray","synthetic":true,"types":[]},{"text":"impl !Sync for git_signature","synthetic":true,"types":[]},{"text":"impl Sync for git_time","synthetic":true,"types":[]},{"text":"impl !Sync for git_clone_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_checkout_options","synthetic":true,"types":[]},{"text":"impl Sync for git_checkout_perfdata","synthetic":true,"types":[]},{"text":"impl Sync for git_indexer_progress","synthetic":true,"types":[]},{"text":"impl !Sync for git_remote_callbacks","synthetic":true,"types":[]},{"text":"impl !Sync for git_fetch_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_push_update","synthetic":true,"types":[]},{"text":"impl Sync for git_cert","synthetic":true,"types":[]},{"text":"impl Sync for git_cert_hostkey","synthetic":true,"types":[]},{"text":"impl !Sync for git_cert_x509","synthetic":true,"types":[]},{"text":"impl !Sync for git_diff_file","synthetic":true,"types":[]},{"text":"impl !Sync for git_status_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_diff_delta","synthetic":true,"types":[]},{"text":"impl !Sync for git_status_entry","synthetic":true,"types":[]},{"text":"impl !Sync for git_buf","synthetic":true,"types":[]},{"text":"impl Sync for git_blame_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_blame_hunk","synthetic":true,"types":[]},{"text":"impl !Sync for git_index_entry","synthetic":true,"types":[]},{"text":"impl Sync for git_index_time","synthetic":true,"types":[]},{"text":"impl !Sync for git_config_entry","synthetic":true,"types":[]},{"text":"impl !Sync for git_submodule_update_options","synthetic":true,"types":[]},{"text":"impl Sync for git_writestream","synthetic":true,"types":[]},{"text":"impl Sync for git_cred","synthetic":true,"types":[]},{"text":"impl !Sync for git_push_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_repository_init_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_remote_head","synthetic":true,"types":[]},{"text":"impl Sync for git_diff_hunk","synthetic":true,"types":[]},{"text":"impl !Sync for git_diff_line","synthetic":true,"types":[]},{"text":"impl !Sync for git_diff_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_diff_find_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_diff_similarity_metric","synthetic":true,"types":[]},{"text":"impl !Sync for git_diff_format_email_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_diff_binary","synthetic":true,"types":[]},{"text":"impl !Sync for git_diff_binary_file","synthetic":true,"types":[]},{"text":"impl !Sync for git_merge_options","synthetic":true,"types":[]},{"text":"impl Sync for git_transport","synthetic":true,"types":[]},{"text":"impl !Sync for git_odb_backend","synthetic":true,"types":[]},{"text":"impl !Sync for git_odb_writepack","synthetic":true,"types":[]},{"text":"impl Sync for git_refdb_backend","synthetic":true,"types":[]},{"text":"impl !Sync for git_proxy_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_smart_subtransport_stream","synthetic":true,"types":[]},{"text":"impl Sync for git_smart_subtransport","synthetic":true,"types":[]},{"text":"impl !Sync for git_smart_subtransport_definition","synthetic":true,"types":[]},{"text":"impl !Sync for git_describe_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_describe_format_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_stash_apply_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_rebase_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_rebase_operation","synthetic":true,"types":[]},{"text":"impl !Sync for git_cherrypick_options","synthetic":true,"types":[]},{"text":"impl !Sync for git_apply_options","synthetic":true,"types":[]},{"text":"impl Sync for git_blob","synthetic":true,"types":[]},{"text":"impl Sync for git_branch_iterator","synthetic":true,"types":[]},{"text":"impl Sync for git_blame","synthetic":true,"types":[]},{"text":"impl Sync for git_commit","synthetic":true,"types":[]},{"text":"impl Sync for git_config","synthetic":true,"types":[]},{"text":"impl Sync for git_config_iterator","synthetic":true,"types":[]},{"text":"impl Sync for git_index","synthetic":true,"types":[]},{"text":"impl Sync for git_index_conflict_iterator","synthetic":true,"types":[]},{"text":"impl Sync for git_object","synthetic":true,"types":[]},{"text":"impl Sync for git_reference","synthetic":true,"types":[]},{"text":"impl Sync for git_reference_iterator","synthetic":true,"types":[]},{"text":"impl Sync for git_annotated_commit","synthetic":true,"types":[]},{"text":"impl Sync for git_refdb","synthetic":true,"types":[]},{"text":"impl Sync for git_refspec","synthetic":true,"types":[]},{"text":"impl Sync for git_remote","synthetic":true,"types":[]},{"text":"impl Sync for git_repository","synthetic":true,"types":[]},{"text":"impl Sync for git_revwalk","synthetic":true,"types":[]},{"text":"impl Sync for git_submodule","synthetic":true,"types":[]},{"text":"impl Sync for git_tag","synthetic":true,"types":[]},{"text":"impl Sync for git_tree","synthetic":true,"types":[]},{"text":"impl Sync for git_tree_entry","synthetic":true,"types":[]},{"text":"impl Sync for git_treebuilder","synthetic":true,"types":[]},{"text":"impl Sync for git_push","synthetic":true,"types":[]},{"text":"impl Sync for git_note","synthetic":true,"types":[]},{"text":"impl Sync for git_note_iterator","synthetic":true,"types":[]},{"text":"impl Sync for git_status_list","synthetic":true,"types":[]},{"text":"impl Sync for git_pathspec","synthetic":true,"types":[]},{"text":"impl Sync for git_pathspec_match_list","synthetic":true,"types":[]},{"text":"impl Sync for git_diff","synthetic":true,"types":[]},{"text":"impl Sync for git_diff_stats","synthetic":true,"types":[]},{"text":"impl Sync for git_patch","synthetic":true,"types":[]},{"text":"impl Sync for git_rebase","synthetic":true,"types":[]},{"text":"impl Sync for git_reflog","synthetic":true,"types":[]},{"text":"impl Sync for git_reflog_entry","synthetic":true,"types":[]},{"text":"impl Sync for git_describe_result","synthetic":true,"types":[]},{"text":"impl Sync for git_packbuilder","synthetic":true,"types":[]},{"text":"impl Sync for git_odb","synthetic":true,"types":[]},{"text":"impl Sync for git_odb_stream","synthetic":true,"types":[]},{"text":"impl Sync for git_odb_object","synthetic":true,"types":[]},{"text":"impl Sync for git_worktree","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_SESSION","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_USERAUTH_KBDINT_PROMPT","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_USERAUTH_KBDINT_RESPONSE","synthetic":true,"types":[]}];
implementors["libssh2_sys"] = [{"text":"impl Sync for libssh2_struct_stat","synthetic":true,"types":[]},{"text":"impl !Sync for libssh2_agent_publickey","synthetic":true,"types":[]},{"text":"impl !Sync for libssh2_knownhost","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_SFTP_ATTRIBUTES","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_SFTP_STATVFS","synthetic":true,"types":[]},{"text":"impl !Sync for LIBSSH2_USERAUTH_KBDINT_PROMPT","synthetic":true,"types":[]},{"text":"impl !Sync for LIBSSH2_USERAUTH_KBDINT_RESPONSE","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_SESSION","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_AGENT","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_CHANNEL","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_LISTENER","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_KNOWNHOSTS","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_SFTP","synthetic":true,"types":[]},{"text":"impl Sync for LIBSSH2_SFTP_HANDLE","synthetic":true,"types":[]}];
implementors["libz_sys"] = [{"text":"impl !Sync for gz_header","synthetic":true,"types":[]},{"text":"impl !Sync for z_stream","synthetic":true,"types":[]},{"text":"impl Sync for gzFile_s","synthetic":true,"types":[]},{"text":"impl Sync for internal_state","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl Sync for GuardSend","synthetic":true,"types":[]},{"text":"impl !Sync for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Sync, T:&nbsp;?Sized + Send&gt; Sync for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Sync, G:&nbsp;GetThreadId + Sync, T:&nbsp;?Sized + Send&gt; Sync for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, G:&nbsp;GetThreadId + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, G:&nbsp;GetThreadId + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock + Sync, T:&nbsp;?Sized + Send + Sync&gt; Sync for RwLock&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLockUpgrade + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockUpgradableReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; !Sync for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Sync for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Sync for Level","synthetic":true,"types":[]},{"text":"impl Sync for LevelFilter","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Sync for Interest","synthetic":true,"types":[]},{"text":"impl Sync for Poll","synthetic":true,"types":[]},{"text":"impl Sync for Registry","synthetic":true,"types":[]},{"text":"impl Sync for Token","synthetic":true,"types":[]},{"text":"impl Sync for Waker","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SourceFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Event","synthetic":true,"types":[]},{"text":"impl Sync for Events","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Iter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Sync for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Sync for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Sync for FloatErrorKind","synthetic":true,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Sync for AES_KEY","synthetic":true,"types":[]},{"text":"impl !Sync for ASN1_ENCODING","synthetic":true,"types":[]},{"text":"impl !Sync for ERR_STRING_DATA","synthetic":true,"types":[]},{"text":"impl !Sync for X509V3_CTX","synthetic":true,"types":[]},{"text":"impl Sync for SHA_CTX","synthetic":true,"types":[]},{"text":"impl Sync for SHA256_CTX","synthetic":true,"types":[]},{"text":"impl Sync for SHA512_CTX","synthetic":true,"types":[]},{"text":"impl !Sync for SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl !Sync for X509_VAL","synthetic":true,"types":[]},{"text":"impl !Sync for GENERAL_NAME","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Sync for BIO_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for CMS_ContentInfo","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_void","synthetic":true,"types":[]},{"text":"impl Sync for point_conversion_form_t","synthetic":true,"types":[]},{"text":"impl Sync for EC_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for EC_GROUP","synthetic":true,"types":[]},{"text":"impl Sync for EC_POINT","synthetic":true,"types":[]},{"text":"impl Sync for ECDSA_SIG","synthetic":true,"types":[]},{"text":"impl Sync for OCSP_CERTID","synthetic":true,"types":[]},{"text":"impl Sync for OCSP_ONEREQ","synthetic":true,"types":[]},{"text":"impl Sync for OCSP_REQUEST","synthetic":true,"types":[]},{"text":"impl Sync for OCSP_BASICRESP","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_INTEGER","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_GENERALIZEDTIME","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_STRING","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_BIT_STRING","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_TIME","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_TYPE","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Sync for ASN1_OCTET_STRING","synthetic":true,"types":[]},{"text":"impl Sync for bio_st","synthetic":true,"types":[]},{"text":"impl Sync for BIO","synthetic":true,"types":[]},{"text":"impl Sync for BIGNUM","synthetic":true,"types":[]},{"text":"impl Sync for BN_BLINDING","synthetic":true,"types":[]},{"text":"impl Sync for BN_MONT_CTX","synthetic":true,"types":[]},{"text":"impl Sync for BN_CTX","synthetic":true,"types":[]},{"text":"impl Sync for BN_GENCB","synthetic":true,"types":[]},{"text":"impl Sync for EVP_CIPHER","synthetic":true,"types":[]},{"text":"impl Sync for EVP_CIPHER_CTX","synthetic":true,"types":[]},{"text":"impl Sync for EVP_MD","synthetic":true,"types":[]},{"text":"impl Sync for EVP_MD_CTX","synthetic":true,"types":[]},{"text":"impl Sync for EVP_PKEY","synthetic":true,"types":[]},{"text":"impl Sync for PKCS8_PRIV_KEY_INFO","synthetic":true,"types":[]},{"text":"impl Sync for EVP_PKEY_ASN1_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for EVP_PKEY_CTX","synthetic":true,"types":[]},{"text":"impl Sync for HMAC_CTX","synthetic":true,"types":[]},{"text":"impl Sync for DH","synthetic":true,"types":[]},{"text":"impl Sync for DH_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for DSA","synthetic":true,"types":[]},{"text":"impl Sync for DSA_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for RSA","synthetic":true,"types":[]},{"text":"impl Sync for RSA_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for EC_KEY","synthetic":true,"types":[]},{"text":"impl Sync for X509","synthetic":true,"types":[]},{"text":"impl Sync for X509_ALGOR","synthetic":true,"types":[]},{"text":"impl Sync for X509_CRL","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_CRL","synthetic":true,"types":[]},{"text":"impl Sync for X509_NAME","synthetic":true,"types":[]},{"text":"impl Sync for X509_STORE","synthetic":true,"types":[]},{"text":"impl Sync for X509_STORE_CTX","synthetic":true,"types":[]},{"text":"impl Sync for X509_VERIFY_PARAM","synthetic":true,"types":[]},{"text":"impl Sync for CONF","synthetic":true,"types":[]},{"text":"impl Sync for OPENSSL_INIT_SETTINGS","synthetic":true,"types":[]},{"text":"impl Sync for ENGINE","synthetic":true,"types":[]},{"text":"impl Sync for SSL","synthetic":true,"types":[]},{"text":"impl Sync for SSL_CTX","synthetic":true,"types":[]},{"text":"impl Sync for COMP_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for CRYPTO_EX_DATA","synthetic":true,"types":[]},{"text":"impl Sync for OCSP_RESPONSE","synthetic":true,"types":[]},{"text":"impl Sync for PKCS12","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7_SIGNED","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7_SIGN_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7_DIGEST","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7_ENCRYPT","synthetic":true,"types":[]},{"text":"impl Sync for PKCS7","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_OPENSSL_STRING","synthetic":true,"types":[]},{"text":"impl Sync for SSL_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Sync for SSL_SESSION","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Sync for OPENSSL_STACK","synthetic":true,"types":[]},{"text":"impl Sync for X509_NAME_ENTRY","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_NAME","synthetic":true,"types":[]},{"text":"impl Sync for X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_ATTRIBUTE","synthetic":true,"types":[]},{"text":"impl Sync for X509_REQ_INFO","synthetic":true,"types":[]},{"text":"impl Sync for X509_REQ","synthetic":true,"types":[]},{"text":"impl Sync for X509_CINF","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509","synthetic":true,"types":[]},{"text":"impl Sync for X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Sync for X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Sync for CONF_METHOD","synthetic":true,"types":[]},{"text":"impl Sync for stack_st_GENERAL_NAME","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Sync for Condvar","synthetic":true,"types":[]},{"text":"impl Sync for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Sync for Once","synthetic":true,"types":[]},{"text":"impl Sync for RawFairMutex","synthetic":true,"types":[]},{"text":"impl Sync for RawMutex","synthetic":true,"types":[]},{"text":"impl Sync for RawRwLock","synthetic":true,"types":[]},{"text":"impl Sync for RawThreadId","synthetic":true,"types":[]},{"text":"impl Sync for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Sync for ParkToken","synthetic":true,"types":[]},{"text":"impl Sync for UnparkResult","synthetic":true,"types":[]},{"text":"impl Sync for UnparkToken","synthetic":true,"types":[]},{"text":"impl Sync for SpinWait","synthetic":true,"types":[]},{"text":"impl Sync for FilterOp","synthetic":true,"types":[]},{"text":"impl Sync for ParkResult","synthetic":true,"types":[]},{"text":"impl Sync for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Sync for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl !Sync for TokenStream","synthetic":true,"types":[]},{"text":"impl !Sync for LexError","synthetic":true,"types":[]},{"text":"impl !Sync for Span","synthetic":true,"types":[]},{"text":"impl !Sync for Group","synthetic":true,"types":[]},{"text":"impl !Sync for Punct","synthetic":true,"types":[]},{"text":"impl !Sync for Ident","synthetic":true,"types":[]},{"text":"impl !Sync for Literal","synthetic":true,"types":[]},{"text":"impl !Sync for TokenTree","synthetic":true,"types":[]},{"text":"impl Sync for Delimiter","synthetic":true,"types":[]},{"text":"impl Sync for Spacing","synthetic":true,"types":[]},{"text":"impl !Sync for IntoIter","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl Sync for Always","synthetic":true,"types":[]},{"text":"impl&lt;T, F, S&gt; Sync for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(T),<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Strategy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["signal_hook"] = [{"text":"impl Sync for Signals","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Pending&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Forever&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Sync for SigId","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A&gt; Sync for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for CollectionAllocErr","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Sync + Array&gt; Sync for Drain&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl !Sync for Attribute","synthetic":true,"types":[]},{"text":"impl !Sync for MetaList","synthetic":true,"types":[]},{"text":"impl !Sync for MetaNameValue","synthetic":true,"types":[]},{"text":"impl !Sync for Field","synthetic":true,"types":[]},{"text":"impl !Sync for FieldsNamed","synthetic":true,"types":[]},{"text":"impl !Sync for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl !Sync for Variant","synthetic":true,"types":[]},{"text":"impl !Sync for VisCrate","synthetic":true,"types":[]},{"text":"impl !Sync for VisPublic","synthetic":true,"types":[]},{"text":"impl !Sync for VisRestricted","synthetic":true,"types":[]},{"text":"impl !Sync for ExprArray","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAssign","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAsync","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAwait","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBinary","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBlock","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBox","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBreak","synthetic":true,"types":[]},{"text":"impl !Sync for ExprCall","synthetic":true,"types":[]},{"text":"impl !Sync for ExprCast","synthetic":true,"types":[]},{"text":"impl !Sync for ExprClosure","synthetic":true,"types":[]},{"text":"impl !Sync for ExprContinue","synthetic":true,"types":[]},{"text":"impl !Sync for ExprField","synthetic":true,"types":[]},{"text":"impl !Sync for ExprForLoop","synthetic":true,"types":[]},{"text":"impl !Sync for ExprGroup","synthetic":true,"types":[]},{"text":"impl !Sync for ExprIf","synthetic":true,"types":[]},{"text":"impl !Sync for ExprIndex","synthetic":true,"types":[]},{"text":"impl !Sync for ExprLet","synthetic":true,"types":[]},{"text":"impl !Sync for ExprLit","synthetic":true,"types":[]},{"text":"impl !Sync for ExprLoop","synthetic":true,"types":[]},{"text":"impl !Sync for ExprMacro","synthetic":true,"types":[]},{"text":"impl !Sync for ExprMatch","synthetic":true,"types":[]},{"text":"impl !Sync for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl !Sync for ExprParen","synthetic":true,"types":[]},{"text":"impl !Sync for ExprPath","synthetic":true,"types":[]},{"text":"impl !Sync for ExprRange","synthetic":true,"types":[]},{"text":"impl !Sync for ExprReference","synthetic":true,"types":[]},{"text":"impl !Sync for ExprRepeat","synthetic":true,"types":[]},{"text":"impl !Sync for ExprReturn","synthetic":true,"types":[]},{"text":"impl !Sync for ExprStruct","synthetic":true,"types":[]},{"text":"impl !Sync for ExprTry","synthetic":true,"types":[]},{"text":"impl !Sync for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl !Sync for ExprTuple","synthetic":true,"types":[]},{"text":"impl !Sync for ExprType","synthetic":true,"types":[]},{"text":"impl !Sync for ExprUnary","synthetic":true,"types":[]},{"text":"impl !Sync for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl !Sync for ExprWhile","synthetic":true,"types":[]},{"text":"impl !Sync for ExprYield","synthetic":true,"types":[]},{"text":"impl !Sync for Index","synthetic":true,"types":[]},{"text":"impl !Sync for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl !Sync for ConstParam","synthetic":true,"types":[]},{"text":"impl !Sync for Generics","synthetic":true,"types":[]},{"text":"impl !Sync for LifetimeDef","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateEq","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateType","synthetic":true,"types":[]},{"text":"impl !Sync for TraitBound","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParam","synthetic":true,"types":[]},{"text":"impl !Sync for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Lifetime","synthetic":true,"types":[]},{"text":"impl !Sync for LitBool","synthetic":true,"types":[]},{"text":"impl !Sync for LitByte","synthetic":true,"types":[]},{"text":"impl !Sync for LitByteStr","synthetic":true,"types":[]},{"text":"impl !Sync for LitChar","synthetic":true,"types":[]},{"text":"impl !Sync for LitFloat","synthetic":true,"types":[]},{"text":"impl !Sync for LitInt","synthetic":true,"types":[]},{"text":"impl !Sync for LitStr","synthetic":true,"types":[]},{"text":"impl !Sync for Macro","synthetic":true,"types":[]},{"text":"impl !Sync for DataEnum","synthetic":true,"types":[]},{"text":"impl !Sync for DataStruct","synthetic":true,"types":[]},{"text":"impl !Sync for DataUnion","synthetic":true,"types":[]},{"text":"impl !Sync for DeriveInput","synthetic":true,"types":[]},{"text":"impl !Sync for Abi","synthetic":true,"types":[]},{"text":"impl !Sync for BareFnArg","synthetic":true,"types":[]},{"text":"impl !Sync for TypeArray","synthetic":true,"types":[]},{"text":"impl !Sync for TypeBareFn","synthetic":true,"types":[]},{"text":"impl !Sync for TypeGroup","synthetic":true,"types":[]},{"text":"impl !Sync for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl !Sync for TypeInfer","synthetic":true,"types":[]},{"text":"impl !Sync for TypeMacro","synthetic":true,"types":[]},{"text":"impl !Sync for TypeNever","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParen","synthetic":true,"types":[]},{"text":"impl !Sync for TypePath","synthetic":true,"types":[]},{"text":"impl !Sync for TypePtr","synthetic":true,"types":[]},{"text":"impl !Sync for TypeReference","synthetic":true,"types":[]},{"text":"impl !Sync for TypeSlice","synthetic":true,"types":[]},{"text":"impl !Sync for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl !Sync for TypeTuple","synthetic":true,"types":[]},{"text":"impl !Sync for Variadic","synthetic":true,"types":[]},{"text":"impl !Sync for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Sync for Binding","synthetic":true,"types":[]},{"text":"impl !Sync for Constraint","synthetic":true,"types":[]},{"text":"impl !Sync for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Sync for Path","synthetic":true,"types":[]},{"text":"impl !Sync for PathSegment","synthetic":true,"types":[]},{"text":"impl !Sync for QSelf","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for AttrStyle","synthetic":true,"types":[]},{"text":"impl !Sync for Meta","synthetic":true,"types":[]},{"text":"impl !Sync for NestedMeta","synthetic":true,"types":[]},{"text":"impl !Sync for Fields","synthetic":true,"types":[]},{"text":"impl !Sync for Visibility","synthetic":true,"types":[]},{"text":"impl !Sync for Expr","synthetic":true,"types":[]},{"text":"impl !Sync for Member","synthetic":true,"types":[]},{"text":"impl !Sync for GenericParam","synthetic":true,"types":[]},{"text":"impl !Sync for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParamBound","synthetic":true,"types":[]},{"text":"impl !Sync for WherePredicate","synthetic":true,"types":[]},{"text":"impl !Sync for Lit","synthetic":true,"types":[]},{"text":"impl Sync for StrStyle","synthetic":true,"types":[]},{"text":"impl !Sync for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl !Sync for Data","synthetic":true,"types":[]},{"text":"impl !Sync for BinOp","synthetic":true,"types":[]},{"text":"impl !Sync for UnOp","synthetic":true,"types":[]},{"text":"impl !Sync for ReturnType","synthetic":true,"types":[]},{"text":"impl !Sync for Type","synthetic":true,"types":[]},{"text":"impl !Sync for GenericArgument","synthetic":true,"types":[]},{"text":"impl !Sync for PathArguments","synthetic":true,"types":[]},{"text":"impl !Sync for Underscore","synthetic":true,"types":[]},{"text":"impl !Sync for Abstract","synthetic":true,"types":[]},{"text":"impl !Sync for As","synthetic":true,"types":[]},{"text":"impl !Sync for Async","synthetic":true,"types":[]},{"text":"impl !Sync for Auto","synthetic":true,"types":[]},{"text":"impl !Sync for Await","synthetic":true,"types":[]},{"text":"impl !Sync for Become","synthetic":true,"types":[]},{"text":"impl !Sync for Box","synthetic":true,"types":[]},{"text":"impl !Sync for Break","synthetic":true,"types":[]},{"text":"impl !Sync for Const","synthetic":true,"types":[]},{"text":"impl !Sync for Continue","synthetic":true,"types":[]},{"text":"impl !Sync for Crate","synthetic":true,"types":[]},{"text":"impl !Sync for Default","synthetic":true,"types":[]},{"text":"impl !Sync for Do","synthetic":true,"types":[]},{"text":"impl !Sync for Dyn","synthetic":true,"types":[]},{"text":"impl !Sync for Else","synthetic":true,"types":[]},{"text":"impl !Sync for Enum","synthetic":true,"types":[]},{"text":"impl !Sync for Extern","synthetic":true,"types":[]},{"text":"impl !Sync for Final","synthetic":true,"types":[]},{"text":"impl !Sync for Fn","synthetic":true,"types":[]},{"text":"impl !Sync for For","synthetic":true,"types":[]},{"text":"impl !Sync for If","synthetic":true,"types":[]},{"text":"impl !Sync for Impl","synthetic":true,"types":[]},{"text":"impl !Sync for In","synthetic":true,"types":[]},{"text":"impl !Sync for Let","synthetic":true,"types":[]},{"text":"impl !Sync for Loop","synthetic":true,"types":[]},{"text":"impl !Sync for Macro","synthetic":true,"types":[]},{"text":"impl !Sync for Match","synthetic":true,"types":[]},{"text":"impl !Sync for Mod","synthetic":true,"types":[]},{"text":"impl !Sync for Move","synthetic":true,"types":[]},{"text":"impl !Sync for Mut","synthetic":true,"types":[]},{"text":"impl !Sync for Override","synthetic":true,"types":[]},{"text":"impl !Sync for Priv","synthetic":true,"types":[]},{"text":"impl !Sync for Pub","synthetic":true,"types":[]},{"text":"impl !Sync for Ref","synthetic":true,"types":[]},{"text":"impl !Sync for Return","synthetic":true,"types":[]},{"text":"impl !Sync for SelfType","synthetic":true,"types":[]},{"text":"impl !Sync for SelfValue","synthetic":true,"types":[]},{"text":"impl !Sync for Static","synthetic":true,"types":[]},{"text":"impl !Sync for Struct","synthetic":true,"types":[]},{"text":"impl !Sync for Super","synthetic":true,"types":[]},{"text":"impl !Sync for Trait","synthetic":true,"types":[]},{"text":"impl !Sync for Try","synthetic":true,"types":[]},{"text":"impl !Sync for Type","synthetic":true,"types":[]},{"text":"impl !Sync for Typeof","synthetic":true,"types":[]},{"text":"impl !Sync for Union","synthetic":true,"types":[]},{"text":"impl !Sync for Unsafe","synthetic":true,"types":[]},{"text":"impl !Sync for Unsized","synthetic":true,"types":[]},{"text":"impl !Sync for Use","synthetic":true,"types":[]},{"text":"impl !Sync for Virtual","synthetic":true,"types":[]},{"text":"impl !Sync for Where","synthetic":true,"types":[]},{"text":"impl !Sync for While","synthetic":true,"types":[]},{"text":"impl !Sync for Yield","synthetic":true,"types":[]},{"text":"impl !Sync for Add","synthetic":true,"types":[]},{"text":"impl !Sync for AddEq","synthetic":true,"types":[]},{"text":"impl !Sync for And","synthetic":true,"types":[]},{"text":"impl !Sync for AndAnd","synthetic":true,"types":[]},{"text":"impl !Sync for AndEq","synthetic":true,"types":[]},{"text":"impl !Sync for At","synthetic":true,"types":[]},{"text":"impl !Sync for Bang","synthetic":true,"types":[]},{"text":"impl !Sync for Caret","synthetic":true,"types":[]},{"text":"impl !Sync for CaretEq","synthetic":true,"types":[]},{"text":"impl !Sync for Colon","synthetic":true,"types":[]},{"text":"impl !Sync for Colon2","synthetic":true,"types":[]},{"text":"impl !Sync for Comma","synthetic":true,"types":[]},{"text":"impl !Sync for Div","synthetic":true,"types":[]},{"text":"impl !Sync for DivEq","synthetic":true,"types":[]},{"text":"impl !Sync for Dollar","synthetic":true,"types":[]},{"text":"impl !Sync for Dot","synthetic":true,"types":[]},{"text":"impl !Sync for Dot2","synthetic":true,"types":[]},{"text":"impl !Sync for Dot3","synthetic":true,"types":[]},{"text":"impl !Sync for DotDotEq","synthetic":true,"types":[]},{"text":"impl !Sync for Eq","synthetic":true,"types":[]},{"text":"impl !Sync for EqEq","synthetic":true,"types":[]},{"text":"impl !Sync for Ge","synthetic":true,"types":[]},{"text":"impl !Sync for Gt","synthetic":true,"types":[]},{"text":"impl !Sync for Le","synthetic":true,"types":[]},{"text":"impl !Sync for Lt","synthetic":true,"types":[]},{"text":"impl !Sync for MulEq","synthetic":true,"types":[]},{"text":"impl !Sync for Ne","synthetic":true,"types":[]},{"text":"impl !Sync for Or","synthetic":true,"types":[]},{"text":"impl !Sync for OrEq","synthetic":true,"types":[]},{"text":"impl !Sync for OrOr","synthetic":true,"types":[]},{"text":"impl !Sync for Pound","synthetic":true,"types":[]},{"text":"impl !Sync for Question","synthetic":true,"types":[]},{"text":"impl !Sync for RArrow","synthetic":true,"types":[]},{"text":"impl !Sync for LArrow","synthetic":true,"types":[]},{"text":"impl !Sync for Rem","synthetic":true,"types":[]},{"text":"impl !Sync for RemEq","synthetic":true,"types":[]},{"text":"impl !Sync for FatArrow","synthetic":true,"types":[]},{"text":"impl !Sync for Semi","synthetic":true,"types":[]},{"text":"impl !Sync for Shl","synthetic":true,"types":[]},{"text":"impl !Sync for ShlEq","synthetic":true,"types":[]},{"text":"impl !Sync for Shr","synthetic":true,"types":[]},{"text":"impl !Sync for ShrEq","synthetic":true,"types":[]},{"text":"impl !Sync for Star","synthetic":true,"types":[]},{"text":"impl !Sync for Sub","synthetic":true,"types":[]},{"text":"impl !Sync for SubEq","synthetic":true,"types":[]},{"text":"impl !Sync for Tilde","synthetic":true,"types":[]},{"text":"impl !Sync for Brace","synthetic":true,"types":[]},{"text":"impl !Sync for Bracket","synthetic":true,"types":[]},{"text":"impl !Sync for Paren","synthetic":true,"types":[]},{"text":"impl !Sync for Group","synthetic":true,"types":[]},{"text":"impl !Sync for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Sync for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Sync for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !Sync for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Nothing","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Sync for Duration","synthetic":true,"types":[]},{"text":"impl Sync for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Sync for Timespec","synthetic":true,"types":[]},{"text":"impl Sync for PreciseTime","synthetic":true,"types":[]},{"text":"impl Sync for SteadyTime","synthetic":true,"types":[]},{"text":"impl Sync for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Sync for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Sync for ArrayVecDrain&lt;'p, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for ArrayVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Sync for TinyVecDrain&lt;'p, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for TinyVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Sync for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Sync for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Sync for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BidiClass","synthetic":true,"types":[]},{"text":"impl Sync for Level","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Sync for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Sync for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for IsNormalized","synthetic":true,"types":[]}];
implementors["url"] = [{"text":"impl Sync for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Sync for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Origin","synthetic":true,"types":[]},{"text":"impl Sync for ParseError","synthetic":true,"types":[]},{"text":"impl Sync for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl Sync for Position","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for Serializer&lt;'a, T&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()