(function() {var implementors = {};
implementors["arc_swap"] = [{"text":"impl&lt;'l, T&gt; Unpin for Guard&lt;'l, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for ArcSwapAny&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DirectDeref&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for DynGuard&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;G, T&gt; Unpin for MapGuard&lt;G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T, F&gt; Unpin for Map&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ConstantDeref&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Constant&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T&gt; Unpin for Cache&lt;A, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, T, F&gt; Unpin for MapCache&lt;A, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Shard","synthetic":true,"types":[]},{"text":"impl Unpin for Global","synthetic":true,"types":[]},{"text":"impl Unpin for PrivateUnsharded","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PrivateSharded&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl&lt;Tz&gt; Unpin for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Unpin for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl Unpin for ParseMonthError","synthetic":true,"types":[]},{"text":"impl Unpin for SecondsFormat","synthetic":true,"types":[]},{"text":"impl Unpin for RoundingError","synthetic":true,"types":[]},{"text":"impl Unpin for Weekday","synthetic":true,"types":[]},{"text":"impl Unpin for Month","synthetic":true,"types":[]},{"text":"impl Unpin for FixedOffset","synthetic":true,"types":[]},{"text":"impl Unpin for Local","synthetic":true,"types":[]},{"text":"impl Unpin for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveDate","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl Unpin for IsoWeek","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveTime","synthetic":true,"types":[]},{"text":"impl Unpin for Parsed","synthetic":true,"types":[]},{"text":"impl Unpin for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Unpin for InternalFixed","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Pad","synthetic":true,"types":[]},{"text":"impl Unpin for Numeric","synthetic":true,"types":[]},{"text":"impl Unpin for Fixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["crossterm"] = [{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for MoveTo","synthetic":true,"types":[]},{"text":"impl Unpin for MoveToNextLine","synthetic":true,"types":[]},{"text":"impl Unpin for MoveToPreviousLine","synthetic":true,"types":[]},{"text":"impl Unpin for MoveToColumn","synthetic":true,"types":[]},{"text":"impl Unpin for MoveUp","synthetic":true,"types":[]},{"text":"impl Unpin for MoveRight","synthetic":true,"types":[]},{"text":"impl Unpin for MoveDown","synthetic":true,"types":[]},{"text":"impl Unpin for MoveLeft","synthetic":true,"types":[]},{"text":"impl Unpin for SavePosition","synthetic":true,"types":[]},{"text":"impl Unpin for RestorePosition","synthetic":true,"types":[]},{"text":"impl Unpin for Hide","synthetic":true,"types":[]},{"text":"impl Unpin for Show","synthetic":true,"types":[]},{"text":"impl Unpin for EnableBlinking","synthetic":true,"types":[]},{"text":"impl Unpin for DisableBlinking","synthetic":true,"types":[]},{"text":"impl Unpin for EnableMouseCapture","synthetic":true,"types":[]},{"text":"impl Unpin for DisableMouseCapture","synthetic":true,"types":[]},{"text":"impl Unpin for KeyModifiers","synthetic":true,"types":[]},{"text":"impl Unpin for KeyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for MouseEvent","synthetic":true,"types":[]},{"text":"impl Unpin for MouseButton","synthetic":true,"types":[]},{"text":"impl Unpin for KeyCode","synthetic":true,"types":[]},{"text":"impl Unpin for Attributes","synthetic":true,"types":[]},{"text":"impl Unpin for ContentStyle","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for StyledContent&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Colors","synthetic":true,"types":[]},{"text":"impl Unpin for SetForegroundColor","synthetic":true,"types":[]},{"text":"impl Unpin for SetBackgroundColor","synthetic":true,"types":[]},{"text":"impl Unpin for SetColors","synthetic":true,"types":[]},{"text":"impl Unpin for SetAttribute","synthetic":true,"types":[]},{"text":"impl Unpin for SetAttributes","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for PrintStyledContent&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ResetColor","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Print&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Attribute","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]},{"text":"impl Unpin for Colored","synthetic":true,"types":[]},{"text":"impl Unpin for EnterAlternateScreen","synthetic":true,"types":[]},{"text":"impl Unpin for LeaveAlternateScreen","synthetic":true,"types":[]},{"text":"impl Unpin for ScrollUp","synthetic":true,"types":[]},{"text":"impl Unpin for ScrollDown","synthetic":true,"types":[]},{"text":"impl Unpin for Clear","synthetic":true,"types":[]},{"text":"impl Unpin for SetSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SetTitle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClearType","synthetic":true,"types":[]}];
implementors["git2"] = [{"text":"impl&lt;'cb&gt; Unpin for ApplyOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Blame&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'blame&gt; Unpin for BlameHunk&lt;'blame&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'blame&gt; Unpin for BlameIter&lt;'blame&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BlameOptions","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Blob&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for BlobWriter&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Branch&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Branches&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Buf","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Unpin for CherrypickOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Commit&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'commit, 'repo&gt; Unpin for Parents&lt;'commit, 'repo&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'repo: 'commit,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; Unpin for ConfigEntries&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cfg&gt; Unpin for ConfigEntry&lt;'cfg&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Cred","synthetic":true,"types":[]},{"text":"impl Unpin for CredentialHelper","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Describe&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DescribeFormatOptions","synthetic":true,"types":[]},{"text":"impl Unpin for DescribeOptions","synthetic":true,"types":[]},{"text":"impl&lt;'diff&gt; Unpin for Deltas&lt;'diff&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Diff&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DiffDelta&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DiffFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DiffOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DiffBinary&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DiffBinaryFile&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DiffFindOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DiffHunk&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DiffLine&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DiffStats","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Index","synthetic":true,"types":[]},{"text":"impl Unpin for IndexConflict","synthetic":true,"types":[]},{"text":"impl&lt;'index&gt; Unpin for IndexConflicts&lt;'index&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'index&gt; Unpin for IndexEntries&lt;'index&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IndexEntry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Progress&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'odb&gt; Unpin for Mempack&lt;'odb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for AnnotatedCommit&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for MergeOptions","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Note&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Notes&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Object&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Odb&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OdbObject&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for OdbPackwriter&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for OdbReader&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for OdbWriter&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Oid","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for PackBuilder&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'buffers&gt; Unpin for Patch&lt;'buffers&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Pathspec","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; Unpin for PathspecFailedEntries&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ps&gt; Unpin for PathspecMatchList&lt;'ps&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; Unpin for PathspecDiffEntries&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'list&gt; Unpin for PathspecEntries&lt;'list&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ProxyOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Rebase&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'rebase&gt; Unpin for RebaseOperation&lt;'rebase&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Unpin for RebaseOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Reference&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo, 'references&gt; Unpin for ReferenceNames&lt;'repo, 'references&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'repo: 'references,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for References&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Reflog","synthetic":true,"types":[]},{"text":"impl&lt;'reflog&gt; Unpin for ReflogEntry&lt;'reflog&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'reflog&gt; Unpin for ReflogIter&lt;'reflog&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'remote&gt; Unpin for Refspec&lt;'remote&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Unpin for FetchOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Unpin for PushOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'remote&gt; Unpin for Refspecs&lt;'remote&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Remote&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo, 'connection, 'cb&gt; Unpin for RemoteConnection&lt;'repo, 'connection, 'cb&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'repo: 'connection,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'remote&gt; Unpin for RemoteHead&lt;'remote&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RemoteCallbacks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Repository","synthetic":true,"types":[]},{"text":"impl Unpin for RepositoryInitOptions","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Unpin for RevertOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Revspec&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Revwalk&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Signature&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Unpin for StashApplyOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'statuses&gt; Unpin for StatusEntry&lt;'statuses&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'statuses&gt; Unpin for StatusIter&lt;'statuses&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for StatusOptions","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Statuses&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Submodule&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Unpin for SubmoduleUpdateOptions&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Tag&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IndexTime","synthetic":true,"types":[]},{"text":"impl Unpin for Time","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for Tree&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'tree&gt; Unpin for TreeEntry&lt;'tree&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'tree&gt; Unpin for TreeIter&lt;'tree&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'repo&gt; Unpin for TreeBuilder&lt;'repo&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Sort","synthetic":true,"types":[]},{"text":"impl Unpin for CredentialType","synthetic":true,"types":[]},{"text":"impl Unpin for IndexEntryFlag","synthetic":true,"types":[]},{"text":"impl Unpin for IndexEntryExtendedFlag","synthetic":true,"types":[]},{"text":"impl Unpin for IndexAddOption","synthetic":true,"types":[]},{"text":"impl Unpin for RepositoryOpenFlags","synthetic":true,"types":[]},{"text":"impl Unpin for RevparseMode","synthetic":true,"types":[]},{"text":"impl Unpin for MergeAnalysis","synthetic":true,"types":[]},{"text":"impl Unpin for MergePreference","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl Unpin for RepositoryInitMode","synthetic":true,"types":[]},{"text":"impl Unpin for SubmoduleStatus","synthetic":true,"types":[]},{"text":"impl Unpin for PathspecFlags","synthetic":true,"types":[]},{"text":"impl Unpin for CheckoutNotificationType","synthetic":true,"types":[]},{"text":"impl Unpin for DiffStatsFormat","synthetic":true,"types":[]},{"text":"impl Unpin for StashApplyFlags","synthetic":true,"types":[]},{"text":"impl Unpin for StashFlags","synthetic":true,"types":[]},{"text":"impl Unpin for AttrCheckFlags","synthetic":true,"types":[]},{"text":"impl Unpin for DiffFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ApplyLocation","synthetic":true,"types":[]},{"text":"impl Unpin for DiffBinaryKind","synthetic":true,"types":[]},{"text":"impl Unpin for PackBuilderStage","synthetic":true,"types":[]},{"text":"impl Unpin for RebaseOperationType","synthetic":true,"types":[]},{"text":"impl Unpin for StatusShow","synthetic":true,"types":[]},{"text":"impl Unpin for TreeWalkMode","synthetic":true,"types":[]},{"text":"impl Unpin for TreeWalkResult","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorClass","synthetic":true,"types":[]},{"text":"impl Unpin for RepositoryState","synthetic":true,"types":[]},{"text":"impl Unpin for Direction","synthetic":true,"types":[]},{"text":"impl Unpin for ResetType","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectType","synthetic":true,"types":[]},{"text":"impl Unpin for ReferenceType","synthetic":true,"types":[]},{"text":"impl Unpin for BranchType","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigLevel","synthetic":true,"types":[]},{"text":"impl Unpin for FileFavor","synthetic":true,"types":[]},{"text":"impl Unpin for Delta","synthetic":true,"types":[]},{"text":"impl Unpin for FileMode","synthetic":true,"types":[]},{"text":"impl Unpin for SubmoduleIgnore","synthetic":true,"types":[]},{"text":"impl Unpin for DiffFormat","synthetic":true,"types":[]},{"text":"impl Unpin for AutotagOption","synthetic":true,"types":[]},{"text":"impl Unpin for FetchPrune","synthetic":true,"types":[]},{"text":"impl Unpin for StashApplyProgress","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Unpin for RepoBuilder&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'cb&gt; Unpin for CheckoutBuilder&lt;'cb&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CloneLocal","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Cert&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CertHostkey&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CertX509&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OidArray","synthetic":true,"types":[]},{"text":"impl Unpin for StringArray","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Transport","synthetic":true,"types":[]},{"text":"impl Unpin for Service","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Errors","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Unpin for group","synthetic":true,"types":[]},{"text":"impl Unpin for utimbuf","synthetic":true,"types":[]},{"text":"impl Unpin for timeval","synthetic":true,"types":[]},{"text":"impl Unpin for timespec","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit","synthetic":true,"types":[]},{"text":"impl Unpin for rusage","synthetic":true,"types":[]},{"text":"impl Unpin for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for hostent","synthetic":true,"types":[]},{"text":"impl Unpin for iovec","synthetic":true,"types":[]},{"text":"impl Unpin for pollfd","synthetic":true,"types":[]},{"text":"impl Unpin for winsize","synthetic":true,"types":[]},{"text":"impl Unpin for linger","synthetic":true,"types":[]},{"text":"impl Unpin for sigval","synthetic":true,"types":[]},{"text":"impl Unpin for itimerval","synthetic":true,"types":[]},{"text":"impl Unpin for tms","synthetic":true,"types":[]},{"text":"impl Unpin for servent","synthetic":true,"types":[]},{"text":"impl Unpin for protoent","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Unpin for passwd","synthetic":true,"types":[]},{"text":"impl Unpin for ifaddrs","synthetic":true,"types":[]},{"text":"impl Unpin for fd_set","synthetic":true,"types":[]},{"text":"impl Unpin for tm","synthetic":true,"types":[]},{"text":"impl Unpin for msghdr","synthetic":true,"types":[]},{"text":"impl Unpin for cmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for fsid_t","synthetic":true,"types":[]},{"text":"impl Unpin for if_nameindex","synthetic":true,"types":[]},{"text":"impl Unpin for regex_t","synthetic":true,"types":[]},{"text":"impl Unpin for regmatch_t","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Unpin for utsname","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for aiocb","synthetic":true,"types":[]},{"text":"impl Unpin for glob_t","synthetic":true,"types":[]},{"text":"impl Unpin for addrinfo","synthetic":true,"types":[]},{"text":"impl Unpin for mach_timebase_info","synthetic":true,"types":[]},{"text":"impl Unpin for stat","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for siginfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for sigaction","synthetic":true,"types":[]},{"text":"impl Unpin for stack_t","synthetic":true,"types":[]},{"text":"impl Unpin for fstore_t","synthetic":true,"types":[]},{"text":"impl Unpin for radvisory","synthetic":true,"types":[]},{"text":"impl Unpin for statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for Dl_info","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Unpin for kevent64_s","synthetic":true,"types":[]},{"text":"impl Unpin for dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for if_msghdr","synthetic":true,"types":[]},{"text":"impl Unpin for termios","synthetic":true,"types":[]},{"text":"impl Unpin for flock","synthetic":true,"types":[]},{"text":"impl Unpin for sf_hdtr","synthetic":true,"types":[]},{"text":"impl Unpin for lconv","synthetic":true,"types":[]},{"text":"impl Unpin for proc_taskinfo","synthetic":true,"types":[]},{"text":"impl Unpin for proc_bsdinfo","synthetic":true,"types":[]},{"text":"impl Unpin for proc_taskallinfo","synthetic":true,"types":[]},{"text":"impl Unpin for xsw_usage","synthetic":true,"types":[]},{"text":"impl Unpin for xucred","synthetic":true,"types":[]},{"text":"impl Unpin for mach_header","synthetic":true,"types":[]},{"text":"impl Unpin for mach_header_64","synthetic":true,"types":[]},{"text":"impl Unpin for segment_command","synthetic":true,"types":[]},{"text":"impl Unpin for segment_command_64","synthetic":true,"types":[]},{"text":"impl Unpin for load_command","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_dl","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_inarp","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_ctl","synthetic":true,"types":[]},{"text":"impl Unpin for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for ipc_perm","synthetic":true,"types":[]},{"text":"impl Unpin for sembuf","synthetic":true,"types":[]},{"text":"impl Unpin for arphdr","synthetic":true,"types":[]},{"text":"impl Unpin for in_addr","synthetic":true,"types":[]},{"text":"impl Unpin for sa_endpoints_t","synthetic":true,"types":[]},{"text":"impl Unpin for timex","synthetic":true,"types":[]},{"text":"impl Unpin for ntptimeval","synthetic":true,"types":[]},{"text":"impl Unpin for kevent","synthetic":true,"types":[]},{"text":"impl Unpin for semid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for shmid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for proc_threadinfo","synthetic":true,"types":[]},{"text":"impl Unpin for statfs","synthetic":true,"types":[]},{"text":"impl Unpin for dirent","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Unpin for utmpx","synthetic":true,"types":[]},{"text":"impl Unpin for sigevent","synthetic":true,"types":[]},{"text":"impl Unpin for timeval32","synthetic":true,"types":[]},{"text":"impl Unpin for if_data","synthetic":true,"types":[]},{"text":"impl Unpin for bpf_hdr","synthetic":true,"types":[]},{"text":"impl Unpin for ucontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for __darwin_mcontext64","synthetic":true,"types":[]},{"text":"impl Unpin for __darwin_x86_exception_state64","synthetic":true,"types":[]},{"text":"impl Unpin for __darwin_x86_thread_state64","synthetic":true,"types":[]},{"text":"impl Unpin for __darwin_x86_float_state64","synthetic":true,"types":[]},{"text":"impl Unpin for __darwin_mmst_reg","synthetic":true,"types":[]},{"text":"impl Unpin for __darwin_xmm_reg","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Unpin for max_align_t","synthetic":true,"types":[]},{"text":"impl Unpin for in6_addr","synthetic":true,"types":[]},{"text":"impl Unpin for semun","synthetic":true,"types":[]},{"text":"impl Unpin for DIR","synthetic":true,"types":[]},{"text":"impl Unpin for FILE","synthetic":true,"types":[]},{"text":"impl Unpin for fpos_t","synthetic":true,"types":[]},{"text":"impl Unpin for timezone","synthetic":true,"types":[]}];
implementors["libgit2_sys"] = [{"text":"impl Unpin for git_revspec","synthetic":true,"types":[]},{"text":"impl Unpin for git_error","synthetic":true,"types":[]},{"text":"impl Unpin for git_oid","synthetic":true,"types":[]},{"text":"impl Unpin for git_strarray","synthetic":true,"types":[]},{"text":"impl Unpin for git_oidarray","synthetic":true,"types":[]},{"text":"impl Unpin for git_signature","synthetic":true,"types":[]},{"text":"impl Unpin for git_time","synthetic":true,"types":[]},{"text":"impl Unpin for git_clone_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_checkout_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_checkout_perfdata","synthetic":true,"types":[]},{"text":"impl Unpin for git_indexer_progress","synthetic":true,"types":[]},{"text":"impl Unpin for git_remote_callbacks","synthetic":true,"types":[]},{"text":"impl Unpin for git_fetch_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_push_update","synthetic":true,"types":[]},{"text":"impl Unpin for git_cert","synthetic":true,"types":[]},{"text":"impl Unpin for git_cert_hostkey","synthetic":true,"types":[]},{"text":"impl Unpin for git_cert_x509","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_file","synthetic":true,"types":[]},{"text":"impl Unpin for git_status_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_delta","synthetic":true,"types":[]},{"text":"impl Unpin for git_status_entry","synthetic":true,"types":[]},{"text":"impl Unpin for git_buf","synthetic":true,"types":[]},{"text":"impl Unpin for git_blame_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_blame_hunk","synthetic":true,"types":[]},{"text":"impl Unpin for git_index_entry","synthetic":true,"types":[]},{"text":"impl Unpin for git_index_time","synthetic":true,"types":[]},{"text":"impl Unpin for git_config_entry","synthetic":true,"types":[]},{"text":"impl Unpin for git_submodule_update_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_writestream","synthetic":true,"types":[]},{"text":"impl Unpin for git_cred","synthetic":true,"types":[]},{"text":"impl Unpin for git_push_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_repository_init_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_remote_head","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_hunk","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_line","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_find_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_similarity_metric","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_format_email_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_binary","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_binary_file","synthetic":true,"types":[]},{"text":"impl Unpin for git_merge_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_transport","synthetic":true,"types":[]},{"text":"impl Unpin for git_odb_backend","synthetic":true,"types":[]},{"text":"impl Unpin for git_odb_writepack","synthetic":true,"types":[]},{"text":"impl Unpin for git_refdb_backend","synthetic":true,"types":[]},{"text":"impl Unpin for git_proxy_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_smart_subtransport_stream","synthetic":true,"types":[]},{"text":"impl Unpin for git_smart_subtransport","synthetic":true,"types":[]},{"text":"impl Unpin for git_smart_subtransport_definition","synthetic":true,"types":[]},{"text":"impl Unpin for git_describe_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_describe_format_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_stash_apply_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_rebase_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_rebase_operation","synthetic":true,"types":[]},{"text":"impl Unpin for git_cherrypick_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_apply_options","synthetic":true,"types":[]},{"text":"impl Unpin for git_blob","synthetic":true,"types":[]},{"text":"impl Unpin for git_branch_iterator","synthetic":true,"types":[]},{"text":"impl Unpin for git_blame","synthetic":true,"types":[]},{"text":"impl Unpin for git_commit","synthetic":true,"types":[]},{"text":"impl Unpin for git_config","synthetic":true,"types":[]},{"text":"impl Unpin for git_config_iterator","synthetic":true,"types":[]},{"text":"impl Unpin for git_index","synthetic":true,"types":[]},{"text":"impl Unpin for git_index_conflict_iterator","synthetic":true,"types":[]},{"text":"impl Unpin for git_object","synthetic":true,"types":[]},{"text":"impl Unpin for git_reference","synthetic":true,"types":[]},{"text":"impl Unpin for git_reference_iterator","synthetic":true,"types":[]},{"text":"impl Unpin for git_annotated_commit","synthetic":true,"types":[]},{"text":"impl Unpin for git_refdb","synthetic":true,"types":[]},{"text":"impl Unpin for git_refspec","synthetic":true,"types":[]},{"text":"impl Unpin for git_remote","synthetic":true,"types":[]},{"text":"impl Unpin for git_repository","synthetic":true,"types":[]},{"text":"impl Unpin for git_revwalk","synthetic":true,"types":[]},{"text":"impl Unpin for git_submodule","synthetic":true,"types":[]},{"text":"impl Unpin for git_tag","synthetic":true,"types":[]},{"text":"impl Unpin for git_tree","synthetic":true,"types":[]},{"text":"impl Unpin for git_tree_entry","synthetic":true,"types":[]},{"text":"impl Unpin for git_treebuilder","synthetic":true,"types":[]},{"text":"impl Unpin for git_push","synthetic":true,"types":[]},{"text":"impl Unpin for git_note","synthetic":true,"types":[]},{"text":"impl Unpin for git_note_iterator","synthetic":true,"types":[]},{"text":"impl Unpin for git_status_list","synthetic":true,"types":[]},{"text":"impl Unpin for git_pathspec","synthetic":true,"types":[]},{"text":"impl Unpin for git_pathspec_match_list","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff","synthetic":true,"types":[]},{"text":"impl Unpin for git_diff_stats","synthetic":true,"types":[]},{"text":"impl Unpin for git_patch","synthetic":true,"types":[]},{"text":"impl Unpin for git_rebase","synthetic":true,"types":[]},{"text":"impl Unpin for git_reflog","synthetic":true,"types":[]},{"text":"impl Unpin for git_reflog_entry","synthetic":true,"types":[]},{"text":"impl Unpin for git_describe_result","synthetic":true,"types":[]},{"text":"impl Unpin for git_packbuilder","synthetic":true,"types":[]},{"text":"impl Unpin for git_odb","synthetic":true,"types":[]},{"text":"impl Unpin for git_odb_stream","synthetic":true,"types":[]},{"text":"impl Unpin for git_odb_object","synthetic":true,"types":[]},{"text":"impl Unpin for git_worktree","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_SESSION","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_USERAUTH_KBDINT_PROMPT","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_USERAUTH_KBDINT_RESPONSE","synthetic":true,"types":[]}];
implementors["libssh2_sys"] = [{"text":"impl Unpin for libssh2_struct_stat","synthetic":true,"types":[]},{"text":"impl Unpin for libssh2_agent_publickey","synthetic":true,"types":[]},{"text":"impl Unpin for libssh2_knownhost","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_SFTP_ATTRIBUTES","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_SFTP_STATVFS","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_USERAUTH_KBDINT_PROMPT","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_USERAUTH_KBDINT_RESPONSE","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_SESSION","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_AGENT","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_CHANNEL","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_LISTENER","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_KNOWNHOSTS","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_SFTP","synthetic":true,"types":[]},{"text":"impl Unpin for LIBSSH2_SFTP_HANDLE","synthetic":true,"types":[]}];
implementors["libz_sys"] = [{"text":"impl Unpin for gz_header","synthetic":true,"types":[]},{"text":"impl Unpin for z_stream","synthetic":true,"types":[]},{"text":"impl Unpin for gzFile_s","synthetic":true,"types":[]},{"text":"impl Unpin for internal_state","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl Unpin for GuardSend","synthetic":true,"types":[]},{"text":"impl Unpin for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;R, T:&nbsp;?Sized&gt; Unpin for Mutex&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawMutex&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, G, T:&nbsp;?Sized&gt; Unpin for ReentrantMutex&lt;R, G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Unpin for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Unpin for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T:&nbsp;?Sized&gt; Unpin for RwLock&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockUpgradableReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Unpin for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Unpin for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for LevelFilter","synthetic":true,"types":[]}];
implementors["mio"] = [{"text":"impl Unpin for Interest","synthetic":true,"types":[]},{"text":"impl Unpin for Poll","synthetic":true,"types":[]},{"text":"impl Unpin for Registry","synthetic":true,"types":[]},{"text":"impl Unpin for Token","synthetic":true,"types":[]},{"text":"impl Unpin for Waker","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SourceFd&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Events","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Unpin for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Unpin for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Unpin for FloatErrorKind","synthetic":true,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Unpin for AES_KEY","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_ENCODING","synthetic":true,"types":[]},{"text":"impl Unpin for ERR_STRING_DATA","synthetic":true,"types":[]},{"text":"impl Unpin for X509V3_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SHA_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SHA256_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SHA512_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Unpin for X509_VAL","synthetic":true,"types":[]},{"text":"impl Unpin for GENERAL_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for BIO_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for CMS_ContentInfo","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_void","synthetic":true,"types":[]},{"text":"impl Unpin for point_conversion_form_t","synthetic":true,"types":[]},{"text":"impl Unpin for EC_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EC_GROUP","synthetic":true,"types":[]},{"text":"impl Unpin for EC_POINT","synthetic":true,"types":[]},{"text":"impl Unpin for ECDSA_SIG","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_CERTID","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_ONEREQ","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_REQUEST","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_BASICRESP","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_INTEGER","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_GENERALIZEDTIME","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_BIT_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_TIME","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_OCTET_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for bio_st","synthetic":true,"types":[]},{"text":"impl Unpin for BIO","synthetic":true,"types":[]},{"text":"impl Unpin for BIGNUM","synthetic":true,"types":[]},{"text":"impl Unpin for BN_BLINDING","synthetic":true,"types":[]},{"text":"impl Unpin for BN_MONT_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for BN_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for BN_GENCB","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_CIPHER_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_MD","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_MD_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS8_PRIV_KEY_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY_ASN1_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for HMAC_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for DH","synthetic":true,"types":[]},{"text":"impl Unpin for DH_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for DSA","synthetic":true,"types":[]},{"text":"impl Unpin for DSA_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for RSA","synthetic":true,"types":[]},{"text":"impl Unpin for RSA_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EC_KEY","synthetic":true,"types":[]},{"text":"impl Unpin for X509","synthetic":true,"types":[]},{"text":"impl Unpin for X509_ALGOR","synthetic":true,"types":[]},{"text":"impl Unpin for X509_CRL","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_CRL","synthetic":true,"types":[]},{"text":"impl Unpin for X509_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for X509_STORE","synthetic":true,"types":[]},{"text":"impl Unpin for X509_STORE_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for X509_VERIFY_PARAM","synthetic":true,"types":[]},{"text":"impl Unpin for CONF","synthetic":true,"types":[]},{"text":"impl Unpin for OPENSSL_INIT_SETTINGS","synthetic":true,"types":[]},{"text":"impl Unpin for ENGINE","synthetic":true,"types":[]},{"text":"impl Unpin for SSL","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for COMP_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for CRYPTO_EX_DATA","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_RESPONSE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS12","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_SIGNED","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_SIGN_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_DIGEST","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_ENCRYPT","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_OPENSSL_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_SESSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Unpin for OPENSSL_STACK","synthetic":true,"types":[]},{"text":"impl Unpin for X509_NAME_ENTRY","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_ATTRIBUTE","synthetic":true,"types":[]},{"text":"impl Unpin for X509_REQ_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for X509_REQ","synthetic":true,"types":[]},{"text":"impl Unpin for X509_CINF","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509","synthetic":true,"types":[]},{"text":"impl Unpin for X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Unpin for CONF_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_GENERAL_NAME","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Unpin for Condvar","synthetic":true,"types":[]},{"text":"impl Unpin for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Unpin for Once","synthetic":true,"types":[]},{"text":"impl Unpin for RawFairMutex","synthetic":true,"types":[]},{"text":"impl Unpin for RawMutex","synthetic":true,"types":[]},{"text":"impl Unpin for RawRwLock","synthetic":true,"types":[]},{"text":"impl Unpin for RawThreadId","synthetic":true,"types":[]},{"text":"impl Unpin for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Unpin for ParkToken","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkResult","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkToken","synthetic":true,"types":[]},{"text":"impl Unpin for SpinWait","synthetic":true,"types":[]},{"text":"impl Unpin for FilterOp","synthetic":true,"types":[]},{"text":"impl Unpin for ParkResult","synthetic":true,"types":[]},{"text":"impl Unpin for RequeueOp","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Unpin for AsciiSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentEncode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Unpin for TokenStream","synthetic":true,"types":[]},{"text":"impl Unpin for LexError","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Punct","synthetic":true,"types":[]},{"text":"impl Unpin for Ident","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for TokenTree","synthetic":true,"types":[]},{"text":"impl Unpin for Delimiter","synthetic":true,"types":[]},{"text":"impl Unpin for Spacing","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Unpin for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Always","synthetic":true,"types":[]}];
implementors["signal_hook"] = [{"text":"impl Unpin for Signals","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Pending&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Forever&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["signal_hook_registry"] = [{"text":"impl Unpin for SigId","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CollectionAllocErr","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Unpin for Attribute","synthetic":true,"types":[]},{"text":"impl Unpin for MetaList","synthetic":true,"types":[]},{"text":"impl Unpin for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Unpin for Field","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Unpin for Variant","synthetic":true,"types":[]},{"text":"impl Unpin for VisCrate","synthetic":true,"types":[]},{"text":"impl Unpin for VisPublic","synthetic":true,"types":[]},{"text":"impl Unpin for VisRestricted","synthetic":true,"types":[]},{"text":"impl Unpin for ExprArray","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssign","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAsync","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAwait","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBinary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBox","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBreak","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCast","synthetic":true,"types":[]},{"text":"impl Unpin for ExprClosure","synthetic":true,"types":[]},{"text":"impl Unpin for ExprContinue","synthetic":true,"types":[]},{"text":"impl Unpin for ExprField","synthetic":true,"types":[]},{"text":"impl Unpin for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprGroup","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIf","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIndex","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLet","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLit","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMatch","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprParen","synthetic":true,"types":[]},{"text":"impl Unpin for ExprPath","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRange","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReference","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReturn","synthetic":true,"types":[]},{"text":"impl Unpin for ExprStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTry","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTuple","synthetic":true,"types":[]},{"text":"impl Unpin for ExprType","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Unpin for ExprWhile","synthetic":true,"types":[]},{"text":"impl Unpin for ExprYield","synthetic":true,"types":[]},{"text":"impl Unpin for Index","synthetic":true,"types":[]},{"text":"impl Unpin for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Unpin for ConstParam","synthetic":true,"types":[]},{"text":"impl Unpin for Generics","synthetic":true,"types":[]},{"text":"impl Unpin for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateEq","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateType","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBound","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParam","synthetic":true,"types":[]},{"text":"impl Unpin for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Lifetime","synthetic":true,"types":[]},{"text":"impl Unpin for LitBool","synthetic":true,"types":[]},{"text":"impl Unpin for LitByte","synthetic":true,"types":[]},{"text":"impl Unpin for LitByteStr","synthetic":true,"types":[]},{"text":"impl Unpin for LitChar","synthetic":true,"types":[]},{"text":"impl Unpin for LitFloat","synthetic":true,"types":[]},{"text":"impl Unpin for LitInt","synthetic":true,"types":[]},{"text":"impl Unpin for LitStr","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for DataEnum","synthetic":true,"types":[]},{"text":"impl Unpin for DataStruct","synthetic":true,"types":[]},{"text":"impl Unpin for DataUnion","synthetic":true,"types":[]},{"text":"impl Unpin for DeriveInput","synthetic":true,"types":[]},{"text":"impl Unpin for Abi","synthetic":true,"types":[]},{"text":"impl Unpin for BareFnArg","synthetic":true,"types":[]},{"text":"impl Unpin for TypeArray","synthetic":true,"types":[]},{"text":"impl Unpin for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Unpin for TypeGroup","synthetic":true,"types":[]},{"text":"impl Unpin for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Unpin for TypeInfer","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMacro","synthetic":true,"types":[]},{"text":"impl Unpin for TypeNever","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParen","synthetic":true,"types":[]},{"text":"impl Unpin for TypePath","synthetic":true,"types":[]},{"text":"impl Unpin for TypePtr","synthetic":true,"types":[]},{"text":"impl Unpin for TypeReference","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSlice","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTuple","synthetic":true,"types":[]},{"text":"impl Unpin for Variadic","synthetic":true,"types":[]},{"text":"impl Unpin for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Binding","synthetic":true,"types":[]},{"text":"impl Unpin for Constraint","synthetic":true,"types":[]},{"text":"impl Unpin for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl Unpin for PathSegment","synthetic":true,"types":[]},{"text":"impl Unpin for QSelf","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for AttrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Meta","synthetic":true,"types":[]},{"text":"impl Unpin for NestedMeta","synthetic":true,"types":[]},{"text":"impl Unpin for Fields","synthetic":true,"types":[]},{"text":"impl Unpin for Visibility","synthetic":true,"types":[]},{"text":"impl Unpin for Expr","synthetic":true,"types":[]},{"text":"impl Unpin for Member","synthetic":true,"types":[]},{"text":"impl Unpin for GenericParam","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Unpin for WherePredicate","synthetic":true,"types":[]},{"text":"impl Unpin for Lit","synthetic":true,"types":[]},{"text":"impl Unpin for StrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Unpin for Data","synthetic":true,"types":[]},{"text":"impl Unpin for BinOp","synthetic":true,"types":[]},{"text":"impl Unpin for UnOp","synthetic":true,"types":[]},{"text":"impl Unpin for ReturnType","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for GenericArgument","synthetic":true,"types":[]},{"text":"impl Unpin for PathArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Underscore","synthetic":true,"types":[]},{"text":"impl Unpin for Abstract","synthetic":true,"types":[]},{"text":"impl Unpin for As","synthetic":true,"types":[]},{"text":"impl Unpin for Async","synthetic":true,"types":[]},{"text":"impl Unpin for Auto","synthetic":true,"types":[]},{"text":"impl Unpin for Await","synthetic":true,"types":[]},{"text":"impl Unpin for Become","synthetic":true,"types":[]},{"text":"impl Unpin for Box","synthetic":true,"types":[]},{"text":"impl Unpin for Break","synthetic":true,"types":[]},{"text":"impl Unpin for Const","synthetic":true,"types":[]},{"text":"impl Unpin for Continue","synthetic":true,"types":[]},{"text":"impl Unpin for Crate","synthetic":true,"types":[]},{"text":"impl Unpin for Default","synthetic":true,"types":[]},{"text":"impl Unpin for Do","synthetic":true,"types":[]},{"text":"impl Unpin for Dyn","synthetic":true,"types":[]},{"text":"impl Unpin for Else","synthetic":true,"types":[]},{"text":"impl Unpin for Enum","synthetic":true,"types":[]},{"text":"impl Unpin for Extern","synthetic":true,"types":[]},{"text":"impl Unpin for Final","synthetic":true,"types":[]},{"text":"impl Unpin for Fn","synthetic":true,"types":[]},{"text":"impl Unpin for For","synthetic":true,"types":[]},{"text":"impl Unpin for If","synthetic":true,"types":[]},{"text":"impl Unpin for Impl","synthetic":true,"types":[]},{"text":"impl Unpin for In","synthetic":true,"types":[]},{"text":"impl Unpin for Let","synthetic":true,"types":[]},{"text":"impl Unpin for Loop","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]},{"text":"impl Unpin for Mod","synthetic":true,"types":[]},{"text":"impl Unpin for Move","synthetic":true,"types":[]},{"text":"impl Unpin for Mut","synthetic":true,"types":[]},{"text":"impl Unpin for Override","synthetic":true,"types":[]},{"text":"impl Unpin for Priv","synthetic":true,"types":[]},{"text":"impl Unpin for Pub","synthetic":true,"types":[]},{"text":"impl Unpin for Ref","synthetic":true,"types":[]},{"text":"impl Unpin for Return","synthetic":true,"types":[]},{"text":"impl Unpin for SelfType","synthetic":true,"types":[]},{"text":"impl Unpin for SelfValue","synthetic":true,"types":[]},{"text":"impl Unpin for Static","synthetic":true,"types":[]},{"text":"impl Unpin for Struct","synthetic":true,"types":[]},{"text":"impl Unpin for Super","synthetic":true,"types":[]},{"text":"impl Unpin for Trait","synthetic":true,"types":[]},{"text":"impl Unpin for Try","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Typeof","synthetic":true,"types":[]},{"text":"impl Unpin for Union","synthetic":true,"types":[]},{"text":"impl Unpin for Unsafe","synthetic":true,"types":[]},{"text":"impl Unpin for Unsized","synthetic":true,"types":[]},{"text":"impl Unpin for Use","synthetic":true,"types":[]},{"text":"impl Unpin for Virtual","synthetic":true,"types":[]},{"text":"impl Unpin for Where","synthetic":true,"types":[]},{"text":"impl Unpin for While","synthetic":true,"types":[]},{"text":"impl Unpin for Yield","synthetic":true,"types":[]},{"text":"impl Unpin for Add","synthetic":true,"types":[]},{"text":"impl Unpin for AddEq","synthetic":true,"types":[]},{"text":"impl Unpin for And","synthetic":true,"types":[]},{"text":"impl Unpin for AndAnd","synthetic":true,"types":[]},{"text":"impl Unpin for AndEq","synthetic":true,"types":[]},{"text":"impl Unpin for At","synthetic":true,"types":[]},{"text":"impl Unpin for Bang","synthetic":true,"types":[]},{"text":"impl Unpin for Caret","synthetic":true,"types":[]},{"text":"impl Unpin for CaretEq","synthetic":true,"types":[]},{"text":"impl Unpin for Colon","synthetic":true,"types":[]},{"text":"impl Unpin for Colon2","synthetic":true,"types":[]},{"text":"impl Unpin for Comma","synthetic":true,"types":[]},{"text":"impl Unpin for Div","synthetic":true,"types":[]},{"text":"impl Unpin for DivEq","synthetic":true,"types":[]},{"text":"impl Unpin for Dollar","synthetic":true,"types":[]},{"text":"impl Unpin for Dot","synthetic":true,"types":[]},{"text":"impl Unpin for Dot2","synthetic":true,"types":[]},{"text":"impl Unpin for Dot3","synthetic":true,"types":[]},{"text":"impl Unpin for DotDotEq","synthetic":true,"types":[]},{"text":"impl Unpin for Eq","synthetic":true,"types":[]},{"text":"impl Unpin for EqEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ge","synthetic":true,"types":[]},{"text":"impl Unpin for Gt","synthetic":true,"types":[]},{"text":"impl Unpin for Le","synthetic":true,"types":[]},{"text":"impl Unpin for Lt","synthetic":true,"types":[]},{"text":"impl Unpin for MulEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ne","synthetic":true,"types":[]},{"text":"impl Unpin for Or","synthetic":true,"types":[]},{"text":"impl Unpin for OrEq","synthetic":true,"types":[]},{"text":"impl Unpin for OrOr","synthetic":true,"types":[]},{"text":"impl Unpin for Pound","synthetic":true,"types":[]},{"text":"impl Unpin for Question","synthetic":true,"types":[]},{"text":"impl Unpin for RArrow","synthetic":true,"types":[]},{"text":"impl Unpin for LArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Rem","synthetic":true,"types":[]},{"text":"impl Unpin for RemEq","synthetic":true,"types":[]},{"text":"impl Unpin for FatArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Semi","synthetic":true,"types":[]},{"text":"impl Unpin for Shl","synthetic":true,"types":[]},{"text":"impl Unpin for ShlEq","synthetic":true,"types":[]},{"text":"impl Unpin for Shr","synthetic":true,"types":[]},{"text":"impl Unpin for ShrEq","synthetic":true,"types":[]},{"text":"impl Unpin for Star","synthetic":true,"types":[]},{"text":"impl Unpin for Sub","synthetic":true,"types":[]},{"text":"impl Unpin for SubEq","synthetic":true,"types":[]},{"text":"impl Unpin for Tilde","synthetic":true,"types":[]},{"text":"impl Unpin for Brace","synthetic":true,"types":[]},{"text":"impl Unpin for Bracket","synthetic":true,"types":[]},{"text":"impl Unpin for Paren","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Unpin for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Nothing","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Unpin for Timespec","synthetic":true,"types":[]},{"text":"impl Unpin for PreciseTime","synthetic":true,"types":[]},{"text":"impl Unpin for SteadyTime","synthetic":true,"types":[]},{"text":"impl Unpin for Tm","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TmFmt&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Unpin for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Unpin for ArrayVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArrayVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Unpin for TinyVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for TinyVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Unpin for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Unpin for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Unpin for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BidiClass","synthetic":true,"types":[]},{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Unpin for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IsNormalized","synthetic":true,"types":[]}];
implementors["url"] = [{"text":"impl Unpin for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Origin","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl Unpin for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl Unpin for Position","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Serializer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()