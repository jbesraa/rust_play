(function() {var implementors = {};
implementors["arc_swap"] = [{"text":"impl&lt;'a, T:&nbsp;RefCnt&gt; Drop for Guard&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;RefCnt, S:&nbsp;LockStorage&gt; Drop for ArcSwapAny&lt;T, S&gt;","synthetic":false,"types":[]}];
implementors["git2"] = [{"text":"impl Drop for OidArray","synthetic":false,"types":[]},{"text":"impl Drop for StringArray","synthetic":false,"types":[]},{"text":"impl Drop for Transport","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Blame&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Blob&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for BlobWriter&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Branches&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl Drop for Buf","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Commit&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl Drop for Config","synthetic":false,"types":[]},{"text":"impl&lt;'cfg&gt; Drop for ConfigEntries&lt;'cfg&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'cfg&gt; Drop for ConfigEntry&lt;'cfg&gt;","synthetic":false,"types":[]},{"text":"impl Drop for Cred","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Describe&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Diff&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl Drop for DiffStats","synthetic":false,"types":[]},{"text":"impl Drop for Index","synthetic":false,"types":[]},{"text":"impl&lt;'index&gt; Drop for IndexConflicts&lt;'index&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for AnnotatedCommit&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Note&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Notes&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Object&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Odb&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Drop for OdbObject&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for OdbReader&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for OdbWriter&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for OdbPackwriter&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for PackBuilder&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'buffers&gt; Drop for Patch&lt;'buffers&gt;","synthetic":false,"types":[]},{"text":"impl Drop for Pathspec","synthetic":false,"types":[]},{"text":"impl&lt;'ps&gt; Drop for PathspecMatchList&lt;'ps&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Rebase&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Reference&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for References&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl Drop for Reflog","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Remote&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo, 'connection, 'cb&gt; Drop for RemoteConnection&lt;'repo, 'connection, 'cb&gt;","synthetic":false,"types":[]},{"text":"impl Drop for Repository","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Revwalk&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Drop for Signature&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Statuses&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Submodule&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Tag&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for Tree&lt;'repo&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Drop for TreeEntry&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'repo&gt; Drop for TreeBuilder&lt;'repo&gt;","synthetic":false,"types":[]}];
implementors["lock_api"] = [{"text":"impl&lt;'a, R:&nbsp;RawMutex + 'a, T:&nbsp;?Sized + 'a&gt; Drop for MutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + 'a, T:&nbsp;?Sized + 'a&gt; Drop for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + 'a, G:&nbsp;GetThreadId + 'a, T:&nbsp;?Sized + 'a&gt; Drop for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + 'a, G:&nbsp;GetThreadId + 'a, T:&nbsp;?Sized + 'a&gt; Drop for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Drop for RwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Drop for RwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLockUpgrade + 'a, T:&nbsp;?Sized + 'a&gt; Drop for RwLockUpgradableReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Drop for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + 'a&gt; Drop for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Drop for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(T),<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Strategy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T:&nbsp;'a + Array&gt; Drop for Drain&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Drop for SmallVec&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Drop for IntoIter&lt;A&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl&lt;'a&gt; Drop for ParseBuffer&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;'p, A:&nbsp;Array&gt; Drop for ArrayVecDrain&lt;'p, A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'p, A:&nbsp;Array&gt; Drop for TinyVecDrain&lt;'p, A&gt;","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl&lt;'a&gt; Drop for PathSegmentsMut&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Drop for UrlQuery&lt;'a&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()